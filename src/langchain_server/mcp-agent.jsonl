{"level":"INFO","timestamp":"2025-04-22T02:53:30.879748","namespace":"mcp_agent.context","message":"Configuring logger with level: debug"}
{"level":"INFO","timestamp":"2025-04-22T02:53:30.879891","namespace":"mcp_agent.mcp_agent","message":"MCPAgent initialized","data":{"data":{"progress_action":"Running","target":"mcp_agent","agent_name":"mcp_application_loop","session_id":"28b6709b-58d3-474f-b877-290f935816f8"}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:30.880312","namespace":"mcp_agent.mcp.mcp_connection_manager","message":"figma: Found server configuration=","data":{"data":{"name":null,"description":null,"transport":"stdio","command":"node","args":["/Users/daeheon_macbook/Documents/KIXLAB/25-1-design-forge/exploration-code/samsung-cxi-mcp-server/src/talk_to_figma_mcp/dist/server.js"],"read_timeout_seconds":null,"url":null,"auth":null,"headers":null,"roots":null,"env":null}}}
{"level":"INFO","timestamp":"2025-04-22T02:53:30.880414","namespace":"mcp_agent.mcp.mcp_connection_manager","message":"figma: Up and running with a persistent connection!"}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:30.884808","namespace":"mcp_agent.mcp.stdio","message":"Started process 'node' with PID: 77388"}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:30.885153","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"initialize","params":{"meta":null,"protocolVersion":"2024-11-05","capabilities":{"experimental":null,"sampling":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp","version":"0.1.0"}}}}}
{"level":"INFO","timestamp":"2025-04-22T02:53:31.043917","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Connecting to Figma socket server at ws://localhost:3055..."}
{"level":"INFO","timestamp":"2025-04-22T02:53:31.050448","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] FigmaMCP server running on stdio"}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:31.053041","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: response=","data":{"data":{"meta":null,"protocolVersion":"2024-11-05","capabilities":{"experimental":null,"logging":null,"prompts":{"listChanged":true},"resources":null,"tools":{"listChanged":"True"}},"serverInfo":{"name":"DesignForgeMCP","version":"1.0.0"},"instructions":null}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:31.053141","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_notification:","data":{"data":{"method":"notifications/initialized","params":null}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:31.053586","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"tools/list","params":null,"cursor":null}}}
{"level":"INFO","timestamp":"2025-04-22T02:53:31.054575","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Connected to Figma socket server"}
{"level":"INFO","timestamp":"2025-04-22T02:53:31.055274","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Received broadcast message: \"Connected to chat server\""}
{"level":"INFO","timestamp":"2025-04-22T02:53:31.058307","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Received broadcast message: {\"id\":\"4b9cf9da-483c-4896-a7d8-cc13ab737f0b\",\"result\":\"Connected to chat server\"}"}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:31.058408","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: response=","data":{"data":{"meta":null,"nextCursor":null,"tools":[{"name":"get_document_info","description":"Get image of the current page in Figma","inputSchema":{"type":"object","properties":{},"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_selection","description":"Get information about the current selection in Figma","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"read_my_design","description":"Get detailed information about the current selection in Figma, including all node details","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_node_info","description":"Get detailed information about a specific node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to get information about"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_nodes_info","description":"Get detailed information about multiple nodes in Figma","inputSchema":{"type":"object","properties":{"nodeIds":{"type":"array","items":{"type":"string"},"description":"Array of node IDs to get information about"}},"required":["nodeIds"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"create_rectangle","description":"Create a new rectangle in Figma","inputSchema":{"type":"object","properties":{"x":{"type":"number","description":"X position"},"y":{"type":"number","description":"Y position"},"width":{"type":"number","description":"Width of the rectangle"},"height":{"type":"number","description":"Height of the rectangle"},"name":{"type":"string","description":"Optional name for the rectangle"},"parentId":{"type":"string","description":"Optional parent node ID to append the rectangle to"}},"required":["x","y","width","height"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"create_frame","description":"Create a new frame in Figma","inputSchema":{"type":"object","properties":{"x":{"type":"number","description":"X position"},"y":{"type":"number","description":"Y position"},"width":{"type":"number","description":"Width of the frame"},"height":{"type":"number","description":"Height of the frame"},"name":{"type":"string","description":"Optional name for the frame"},"parentId":{"type":"string","description":"Optional parent node ID to append the frame to"},"fillColor":{"type":"object","properties":{"r":{"type":"number","minimum":0,"maximum":1,"description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"}},"required":["r","g","b"],"additionalProperties":"False","description":"Fill color in RGBA format"},"strokeColor":{"type":"object","properties":{"r":{"type":"number","minimum":"0","maximum":"1","description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"}},"required":["r","g","b"],"additionalProperties":"False","description":"Stroke color in RGBA format"},"strokeWeight":{"type":"number","exclusiveMinimum":"0","description":"Stroke weight"},"layoutMode":{"type":"string","enum":["NONE","HORIZONTAL","VERTICAL"],"description":"Auto-layout mode for the frame"},"layoutWrap":{"type":"string","enum":["NO_WRAP","WRAP"],"description":"Whether the auto-layout frame wraps its children"},"paddingTop":{"type":"number","description":"Top padding for auto-layout frame"},"paddingRight":{"type":"number","description":"Right padding for auto-layout frame"},"paddingBottom":{"type":"number","description":"Bottom padding for auto-layout frame"},"paddingLeft":{"type":"number","description":"Left padding for auto-layout frame"},"primaryAxisAlignItems":{"type":"string","enum":["MIN","MAX","CENTER","SPACE_BETWEEN"],"description":"Primary axis alignment for auto-layout frame. Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced."},"counterAxisAlignItems":{"type":"string","enum":["MIN","MAX","CENTER","BASELINE"],"description":"Counter axis alignment for auto-layout frame"},"layoutSizingHorizontal":{"type":"string","enum":["FIXED","HUG","FILL"],"description":"Horizontal sizing mode for auto-layout frame"},"layoutSizingVertical":{"type":"string","enum":["FIXED","HUG","FILL"],"description":"Vertical sizing mode for auto-layout frame"},"itemSpacing":{"type":"number","description":"Distance between children in auto-layout frame. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN."}},"required":["x","y","width","height"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"create_text","description":"Create a new text element in Figma","inputSchema":{"type":"object","properties":{"x":{"type":"number","description":"X position"},"y":{"type":"number","description":"Y position"},"text":{"type":"string","description":"Text content"},"fontSize":{"type":"number","description":"Font size (default: 14)"},"fontWeight":{"type":"number","description":"Font weight (e.g., 400 for Regular, 700 for Bold)"},"fontColor":{"type":"object","properties":{"r":{"type":"number","minimum":"0","maximum":"1","description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"}},"required":["r","g","b"],"additionalProperties":"False","description":"Font color in RGBA format"},"name":{"type":"string","description":"Semantic layer name for the text node"},"parentId":{"type":"string","description":"Optional parent node ID to append the text to"}},"required":["x","y","text"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_fill_color","description":"Set the fill color of a node in Figma can be TextNode or FrameNode","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to modify"},"r":{"type":"number","minimum":"0","maximum":"1","description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"}},"required":["nodeId","r","g","b"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_stroke_color","description":"Set the stroke color of a node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to modify"},"r":{"type":"number","minimum":"0","maximum":"1","description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"},"weight":{"type":"number","exclusiveMinimum":"0","description":"Stroke weight"}},"required":["nodeId","r","g","b"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"move_node","description":"Move a node to a new position in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to move"},"x":{"type":"number","description":"New X position"},"y":{"type":"number","description":"New Y position"}},"required":["nodeId","x","y"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"clone_node","description":"Clone an existing node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to clone"},"x":{"type":"number","description":"New X position for the clone"},"y":{"type":"number","description":"New Y position for the clone"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"resize_node","description":"Resize a node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to resize"},"width":{"type":"number","exclusiveMinimum":"0","description":"New width"},"height":{"type":"number","exclusiveMinimum":"0","description":"New height"}},"required":["nodeId","width","height"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"delete_node","description":"Delete a node from Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to delete"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"delete_multiple_nodes","description":"Delete multiple nodes from Figma at once","inputSchema":{"type":"object","properties":{"nodeIds":{"type":"array","items":{"type":"string"},"description":"Array of node IDs to delete"}},"required":["nodeIds"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"export_node_as_image","description":"Export a node as an image from Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to export"},"format":{"type":"string","enum":["PNG","JPG","SVG","PDF"],"description":"Export format"},"scale":{"type":"number","exclusiveMinimum":"0","description":"Export scale"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_text_content","description":"Set the text content of an existing text node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the text node to modify"},"text":{"type":"string","description":"New text content"}},"required":["nodeId","text"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_styles","description":"Get all styles from the current Figma document","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_local_components","description":"Get all local components from the Figma document","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_annotations","description":"Get all annotations in the current document or specific node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"Optional node ID to get annotations for specific node"},"includeCategories":{"type":"boolean","default":true,"description":"Whether to include category information"}},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_annotation","description":"Create or update an annotation","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to annotate"},"annotationId":{"type":"string","description":"The ID of the annotation to update (if updating existing annotation)"},"labelMarkdown":{"type":"string","description":"The annotation text in markdown format"},"categoryId":{"type":"string","description":"The ID of the annotation category"},"properties":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"}},"required":["type"],"additionalProperties":"False"},"description":"Additional properties for the annotation"}},"required":["nodeId","labelMarkdown"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_multiple_annotations","description":"Set multiple annotations parallelly in a node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node containing the elements to annotate"},"annotations":{"type":"array","items":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to annotate"},"labelMarkdown":{"type":"string","description":"The annotation text in markdown format"},"categoryId":{"type":"string","description":"The ID of the annotation category"},"annotationId":{"type":"string","description":"The ID of the annotation to update (if updating existing annotation)"},"properties":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"}},"required":["type"],"additionalProperties":"False"},"description":"Additional properties for the annotation"}},"required":["nodeId","labelMarkdown"],"additionalProperties":"False"},"description":"Array of annotations to apply"}},"required":["nodeId","annotations"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"create_component_instance","description":"Create an instance of a component in Figma","inputSchema":{"type":"object","properties":{"componentKey":{"type":"string","description":"Key of the component to instantiate"},"x":{"type":"number","description":"X position"},"y":{"type":"number","description":"Y position"}},"required":["componentKey","x","y"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_corner_radius","description":"Set the corner radius of a node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to modify"},"radius":{"type":"number","minimum":"0","description":"Corner radius value"},"corners":{"type":"array","items":{"type":"boolean"},"minItems":4,"maxItems":"4","description":"Optional array of 4 booleans to specify which corners to round [topLeft, topRight, bottomRight, bottomLeft]"}},"required":["nodeId","radius"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"scan_text_nodes","description":"Scan all text nodes in the selected Figma node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"ID of the node to scan"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"scan_nodes_by_types","description":"Scan for nodes with specific types in the selected Figma node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"ID of the node to scan"},"types":{"type":"array","items":{"type":"string"},"description":"Array of node types to find (e.g. ['COMPONENT', 'FRAME'])"}},"required":["nodeId","types"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_multiple_text_contents","description":"Set multiple text contents parallelly in a node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node containing the text nodes to replace"},"text":{"type":"array","items":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the text node"},"text":{"type":"string","description":"The replacement text"}},"required":["nodeId","text"],"additionalProperties":"False"},"description":"Array of text node IDs and their replacement texts"}},"required":["nodeId","text"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_layout_mode","description":"Set the layout mode and wrap behavior of a frame in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"layoutMode":{"type":"string","enum":["NONE","HORIZONTAL","VERTICAL"],"description":"Layout mode for the frame"},"layoutWrap":{"type":"string","enum":["NO_WRAP","WRAP"],"description":"Whether the auto-layout frame wraps its children"}},"required":["nodeId","layoutMode"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_padding","description":"Set padding values for an auto-layout frame in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"paddingTop":{"type":"number","description":"Top padding value"},"paddingRight":{"type":"number","description":"Right padding value"},"paddingBottom":{"type":"number","description":"Bottom padding value"},"paddingLeft":{"type":"number","description":"Left padding value"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_axis_align","description":"Set primary and counter axis alignment for an auto-layout frame in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"primaryAxisAlignItems":{"type":"string","enum":["MIN","MAX","CENTER","SPACE_BETWEEN"],"description":"Primary axis alignment (MIN/MAX = left/right in horizontal, top/bottom in vertical). Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced."},"counterAxisAlignItems":{"type":"string","enum":["MIN","MAX","CENTER","BASELINE"],"description":"Counter axis alignment (MIN/MAX = top/bottom in horizontal, left/right in vertical)"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_layout_sizing","description":"Set horizontal and vertical sizing modes for an auto-layout frame in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"layoutSizingHorizontal":{"type":"string","enum":["FIXED","HUG","FILL"],"description":"Horizontal sizing mode (HUG for frames/text only, FILL for auto-layout children only)"},"layoutSizingVertical":{"type":"string","enum":["FIXED","HUG","FILL"],"description":"Vertical sizing mode (HUG for frames/text only, FILL for auto-layout children only)"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_item_spacing","description":"Set distance between children in an auto-layout frame","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"itemSpacing":{"type":"number","description":"Distance between children. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN."}},"required":["nodeId","itemSpacing"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"check_connection_status","description":"Check the connection status with Figma","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}}]}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:31.059783","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"prompts/list","params":null,"cursor":null}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:31.060337","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: response=","data":{"data":{"meta":null,"nextCursor":null,"prompts":[{"name":"design_strategy","description":"Best practices for working with Figma designs","arguments":null},{"name":"read_design_strategy","description":"Best practices for reading Figma designs","arguments":null},{"name":"text_replacement_strategy","description":"Systematic approach for replacing text in Figma designs","arguments":null},{"name":"annotation_conversion_strategy","description":"Strategy for converting manual annotations to Figma's native annotations","arguments":null}]}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:31.060394","namespace":"mcp_agent.mcp.mcp_aggregator.agent","message":"MCP Aggregator initialized for server 'figma'","data":{"data":{"progress_action":"Initialized","server_name":"figma","agent_name":"agent","tool_count":33,"prompt_count":4}}}
{"level":"INFO","timestamp":"2025-04-22T02:53:31.125295","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Received broadcast message: \"A new user has joined the chat\""}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:41.408002","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"{'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': 'you are an assistant'}, {'role': 'user', 'content': 'get document info and suggest whats in the image'}], 'stop': None, 'tools': [{'type': 'function', 'function': {'name': 'figma_get_document_info', 'description': 'Get image of the current page in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_selection', 'description': 'Get information about the current selection in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_read_my_design', 'description': 'Get detailed information about the current selection in Figma, including all node details', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_node_info', 'description': 'Get detailed information about a specific node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to get information about'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_nodes_info', 'description': 'Get detailed information about multiple nodes in Figma', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to get information about'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_rectangle', 'description': 'Create a new rectangle in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the rectangle'}, 'height': {'type': 'number', 'description': 'Height of the rectangle'}, 'name': {'type': 'string', 'description': 'Optional name for the rectangle'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the rectangle to'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_frame', 'description': 'Create a new frame in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the frame'}, 'height': {'type': 'number', 'description': 'Height of the frame'}, 'name': {'type': 'string', 'description': 'Optional name for the frame'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the frame to'}, 'fillColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Fill color in RGBA format'}, 'strokeColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Stroke color in RGBA format'}, 'strokeWeight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Auto-layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}, 'paddingTop': {'type': 'number', 'description': 'Top padding for auto-layout frame'}, 'paddingRight': {'type': 'number', 'description': 'Right padding for auto-layout frame'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding for auto-layout frame'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding for auto-layout frame'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment for auto-layout frame. Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment for auto-layout frame'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode for auto-layout frame'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode for auto-layout frame'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children in auto-layout frame. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_text', 'description': 'Create a new text element in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'text': {'type': 'string', 'description': 'Text content'}, 'fontSize': {'type': 'number', 'description': 'Font size (default: 14)'}, 'fontWeight': {'type': 'number', 'description': 'Font weight (e.g., 400 for Regular, 700 for Bold)'}, 'fontColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Font color in RGBA format'}, 'name': {'type': 'string', 'description': 'Semantic layer name for the text node'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the text to'}}, 'required': ['x', 'y', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_fill_color', 'description': 'Set the fill color of a node in Figma can be TextNode or FrameNode', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_stroke_color', 'description': 'Set the stroke color of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}, 'weight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_move_node', 'description': 'Move a node to a new position in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to move'}, 'x': {'type': 'number', 'description': 'New X position'}, 'y': {'type': 'number', 'description': 'New Y position'}}, 'required': ['nodeId', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_clone_node', 'description': 'Clone an existing node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to clone'}, 'x': {'type': 'number', 'description': 'New X position for the clone'}, 'y': {'type': 'number', 'description': 'New Y position for the clone'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_resize_node', 'description': 'Resize a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to resize'}, 'width': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New width'}, 'height': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New height'}}, 'required': ['nodeId', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_node', 'description': 'Delete a node from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to delete'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_multiple_nodes', 'description': 'Delete multiple nodes from Figma at once', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to delete'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_export_node_as_image', 'description': 'Export a node as an image from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to export'}, 'format': {'type': 'string', 'enum': ['PNG', 'JPG', 'SVG', 'PDF'], 'description': 'Export format'}, 'scale': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Export scale'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_text_content', 'description': 'Set the text content of an existing text node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node to modify'}, 'text': {'type': 'string', 'description': 'New text content'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_styles', 'description': 'Get all styles from the current Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_local_components', 'description': 'Get all local components from the Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_annotations', 'description': 'Get all annotations in the current document or specific node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'Optional node ID to get annotations for specific node'}, 'includeCategories': {'type': 'boolean', 'default': True, 'description': 'Whether to include category information'}}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_annotation', 'description': 'Create or update an annotation', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_annotations', 'description': 'Set multiple annotations parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the elements to annotate'}, 'annotations': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False}, 'description': 'Array of annotations to apply'}}, 'required': ['nodeId', 'annotations'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_component_instance', 'description': 'Create an instance of a component in Figma', 'parameters': {'type': 'object', 'properties': {'componentKey': {'type': 'string', 'description': 'Key of the component to instantiate'}, 'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}}, 'required': ['componentKey', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_corner_radius', 'description': 'Set the corner radius of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'radius': {'type': 'number', 'minimum': 0, 'description': 'Corner radius value'}, 'corners': {'type': 'array', 'items': {'type': 'boolean'}, 'minItems': 4, 'maxItems': 4, 'description': 'Optional array of 4 booleans to specify which corners to round [topLeft, topRight, bottomRight, bottomLeft]'}}, 'required': ['nodeId', 'radius'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_text_nodes', 'description': 'Scan all text nodes in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_nodes_by_types', 'description': 'Scan for nodes with specific types in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}, 'types': {'type': 'array', 'items': {'type': 'string'}, 'description': \"Array of node types to find (e.g. ['COMPONENT', 'FRAME'])\"}}, 'required': ['nodeId', 'types'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_text_contents', 'description': 'Set multiple text contents parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the text nodes to replace'}, 'text': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node'}, 'text': {'type': 'string', 'description': 'The replacement text'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False}, 'description': 'Array of text node IDs and their replacement texts'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_mode', 'description': 'Set the layout mode and wrap behavior of a frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}}, 'required': ['nodeId', 'layoutMode'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_padding', 'description': 'Set padding values for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'paddingTop': {'type': 'number', 'description': 'Top padding value'}, 'paddingRight': {'type': 'number', 'description': 'Right padding value'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding value'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding value'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_axis_align', 'description': 'Set primary and counter axis alignment for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment (MIN/MAX = left/right in horizontal, top/bottom in vertical). Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment (MIN/MAX = top/bottom in horizontal, left/right in vertical)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_sizing', 'description': 'Set horizontal and vertical sizing modes for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_item_spacing', 'description': 'Set distance between children in an auto-layout frame', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['nodeId', 'itemSpacing'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_check_connection_status', 'description': 'Check the connection status with Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': '__human_input__', 'description': '\\nRequest input from a human user. Pauses the workflow until input is received.\\n\\nArgs:\\n    request: The human input request\\n\\nReturns:\\n    The input provided by the human\\n\\nRaises:\\n    TimeoutError: If the timeout is exceeded\\n', 'parameters': {'type': 'object', 'properties': {'request': {'description': 'Represents a request for human input.', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'description': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Description'}, 'request_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Request Id'}, 'workflow_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Id'}, 'timeout_seconds': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Timeout Seconds'}, 'metadata': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Metadata'}}, 'required': ['prompt'], 'title': 'HumanInputRequest', 'type': 'object'}}, 'required': ['request']}}}], 'max_tokens': 4096}"}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:41.408027","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Chat in progress","data":{"data":{"progress_action":"Chatting","model":"gpt-4o","agent_name":"agent","chat_turn":1}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:43.503504","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"OpenAI ChatCompletion response:","data":{"data":{"id":"chatcmpl-BOpcsqSonsSDrPS8OcuwlkmLv05i4","choices":[{"finish_reason":"tool_calls","index":0,"logprobs":null,"message":{"content":null,"refusal":null,"role":"assistant","annotations":[],"audio":null,"function_call":null,"tool_calls":[{"id":"call_ILQBE8vYun0Q0dMudf6ZoNOM","function":{"arguments":"{}","name":"figma_get_document_info"},"type":"function"},{"id":"call_nzoQk9IkaOC0lHz5XQLQUsLS","function":{"arguments":"{}","name":"figma_get_document_info"},"type":"function"}]}}],"created":1745258022,"model":"gpt-4o-2024-08-06","object":"chat.completion","service_tier":"default","system_fingerprint":"fp_f7a584cf1f","usage":{"completion_tokens":46,"prompt_tokens":3053,"total_tokens":3099,"completion_tokens_details":{"accepted_prediction_tokens":0,"audio_tokens":0,"reasoning_tokens":0,"rejected_prediction_tokens":0},"prompt_tokens_details":{"audio_tokens":0,"cached_tokens":0}}}}}
{"level":"INFO","timestamp":"2025-04-22T02:53:43.510804","namespace":"mcp_agent.mcp.mcp_aggregator.agent","message":"Requesting tool call","data":{"data":{"progress_action":"Calling Tool","tool_name":"get_document_info","server_name":"figma","agent_name":"agent"}}}
{"level":"INFO","timestamp":"2025-04-22T02:53:43.510952","namespace":"mcp_agent.mcp.mcp_aggregator.agent","message":"Requesting tool call","data":{"data":{"progress_action":"Calling Tool","tool_name":"get_document_info","server_name":"figma","agent_name":"agent"}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:43.512595","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"tools/call","params":{"meta":null,"name":"get_document_info","arguments":{}}}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:43.517195","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"tools/call","params":{"meta":null,"name":"get_document_info","arguments":{}}}}}
{"level":"INFO","timestamp":"2025-04-22T02:53:43.521506","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Sending command to Figma: get_document_info\n[DEBUG] Request details: {\"id\":\"31033629-e164-4ae8-987b-63112d813d1e\",\"type\":\"message\",\"message\":{\"id\":\"31033629-e164-4ae8-987b-63112d813d1e\",\"command\":\"get_document_info\",\"params\":{\"commandId\":\"31033629-e164-4ae8-987b-63112d813d1e\"}}}\n[INFO] Sending command to Figma: get_document_info\n[DEBUG] Request details: {\"id\":\"c814abe7-4431-489c-9d07-14d82ee2448c\",\"type\":\"message\",\"message\":{\"id\":\"c814abe7-4431-489c-9d07-14d82ee2448c\",\"command\":\"get_document_info\",\"params\":{\"commandId\":\"c814abe7-4431-489c-9d07-14d82ee2448c\"}}}"}
{"level":"INFO","timestamp":"2025-04-22T02:53:43.532258","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Received broadcast message: {\"id\":\"31033629-e164-4ae8-987b-63112d813d1e\",\"command\":\"get_document_info\",\"params\":{\"commandId\":\"31033629-e164-4ae8-987b-63112d813d1e\"}}\n[INFO] Received broadcast message: {\"id\":\"c814abe7-4431-489c-9d07-14d82ee2448c\",\"command\":\"get_document_info\",\"params\":{\"commandId\":\"c814abe7-4431-489c-9d07-14d82ee2448c\"}}"}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:43.871384","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: response=","data":{"data":{"meta":null,"content":[{"type":"text","text":"{\"name\":\"Page 1\",\"id\":\"0:1\",\"type\":\"PAGE\",\"children\":[{\"id\":\"1:2\",\"name\":\"Frame 1\",\"type\":\"FRAME\"},{\"id\":\"44:60\",\"name\":\"Vector\",\"type\":\"FRAME\"},{\"id\":\"88:62\",\"name\":\"Rectangle\",\"type\":\"RECTANGLE\"}],\"currentPage\":{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3},\"pages\":[{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3}]}","annotations":null},{"type":"image","data":"","mimeType":"image/png","annotations":null}],"isError":false}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:43.974583","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: response=","data":{"data":{"meta":null,"content":[{"type":"text","text":"{\"name\":\"Page 1\",\"id\":\"0:1\",\"type\":\"PAGE\",\"children\":[{\"id\":\"1:2\",\"name\":\"Frame 1\",\"type\":\"FRAME\"},{\"id\":\"44:60\",\"name\":\"Vector\",\"type\":\"FRAME\"},{\"id\":\"88:62\",\"name\":\"Rectangle\",\"type\":\"RECTANGLE\"}],\"currentPage\":{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3},\"pages\":[{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3}]}","annotations":null},{"type":"image","data":"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AAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAACAJJgCAAAAACTBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAACAJJgCAAAAACTBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAIAC8AnBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAACAJJgCAAAAACTBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAACAJJgCAAAAACTBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAACAJJgCAAAAACTBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAACAJJgCAAAAACTBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAACAJJgCAAAAACTBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAACAJJgCAAAAACTBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMAAAAAgCSYAgAAAAAkwRQAAAAAIAmmAAAAAABJMAUAAAAASIIpAAAAAEASTAEAAAAAkmAKAAAAAJAEUwAAAACAJJgCAAAAACTBFAAAAAAgCaYAAAAAAEkwBQAAAABIgikAAAAAQBJMAQAAAACSYAoAAAAAkARTAAAAAIAkmAIAAAAAJMEUAAAAACAJpgAAAAAASTAFAAAAAEiCKQAAAABAEkwBAAAAAJJgCgAAAACQBFMA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ABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQARTAAAAAIAIpgAAAAAAEUwBAAAAACKYAgAAAABEMAUAAAAAiGAKAAAAABDBFAAAAAAggikAAAAAQP4H1qamAVcgXlgAAAAASUVORK5CYII=","mimeType":"image/png","annotations":null}],"isError":false}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:43.975117","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Iteration 0: Tool call results: [NameError(\"name 'image_url' is not defined\"), NameError(\"name 'image_url' is not defined\")]"}
{"level":"ERROR","timestamp":"2025-04-22T02:53:43.975129","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Warning: Unexpected error during tool execution: name 'image_url' is not defined. Continuing..."}
{"level":"ERROR","timestamp":"2025-04-22T02:53:43.975134","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Warning: Unexpected error during tool execution: name 'image_url' is not defined. Continuing..."}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:43.975326","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"{'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': 'you are an assistant'}, {'role': 'user', 'content': 'get document info and suggest whats in the image'}, {'role': 'assistant', 'audio': None, 'refusal': None, 'name': 'agent', 'tool_calls': [ChatCompletionMessageToolCall(id='call_ILQBE8vYun0Q0dMudf6ZoNOM', function=Function(arguments='{}', name='figma_get_document_info'), type='function'), ChatCompletionMessageToolCall(id='call_nzoQk9IkaOC0lHz5XQLQUsLS', function=Function(arguments='{}', name='figma_get_document_info'), type='function')]}], 'stop': None, 'tools': [{'type': 'function', 'function': {'name': 'figma_get_document_info', 'description': 'Get image of the current page in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_selection', 'description': 'Get information about the current selection in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_read_my_design', 'description': 'Get detailed information about the current selection in Figma, including all node details', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_node_info', 'description': 'Get detailed information about a specific node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to get information about'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_nodes_info', 'description': 'Get detailed information about multiple nodes in Figma', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to get information about'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_rectangle', 'description': 'Create a new rectangle in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the rectangle'}, 'height': {'type': 'number', 'description': 'Height of the rectangle'}, 'name': {'type': 'string', 'description': 'Optional name for the rectangle'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the rectangle to'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_frame', 'description': 'Create a new frame in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the frame'}, 'height': {'type': 'number', 'description': 'Height of the frame'}, 'name': {'type': 'string', 'description': 'Optional name for the frame'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the frame to'}, 'fillColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Fill color in RGBA format'}, 'strokeColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Stroke color in RGBA format'}, 'strokeWeight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Auto-layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}, 'paddingTop': {'type': 'number', 'description': 'Top padding for auto-layout frame'}, 'paddingRight': {'type': 'number', 'description': 'Right padding for auto-layout frame'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding for auto-layout frame'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding for auto-layout frame'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment for auto-layout frame. Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment for auto-layout frame'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode for auto-layout frame'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode for auto-layout frame'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children in auto-layout frame. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_text', 'description': 'Create a new text element in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'text': {'type': 'string', 'description': 'Text content'}, 'fontSize': {'type': 'number', 'description': 'Font size (default: 14)'}, 'fontWeight': {'type': 'number', 'description': 'Font weight (e.g., 400 for Regular, 700 for Bold)'}, 'fontColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Font color in RGBA format'}, 'name': {'type': 'string', 'description': 'Semantic layer name for the text node'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the text to'}}, 'required': ['x', 'y', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_fill_color', 'description': 'Set the fill color of a node in Figma can be TextNode or FrameNode', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_stroke_color', 'description': 'Set the stroke color of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}, 'weight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_move_node', 'description': 'Move a node to a new position in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to move'}, 'x': {'type': 'number', 'description': 'New X position'}, 'y': {'type': 'number', 'description': 'New Y position'}}, 'required': ['nodeId', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_clone_node', 'description': 'Clone an existing node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to clone'}, 'x': {'type': 'number', 'description': 'New X position for the clone'}, 'y': {'type': 'number', 'description': 'New Y position for the clone'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_resize_node', 'description': 'Resize a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to resize'}, 'width': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New width'}, 'height': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New height'}}, 'required': ['nodeId', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_node', 'description': 'Delete a node from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to delete'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_multiple_nodes', 'description': 'Delete multiple nodes from Figma at once', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to delete'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_export_node_as_image', 'description': 'Export a node as an image from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to export'}, 'format': {'type': 'string', 'enum': ['PNG', 'JPG', 'SVG', 'PDF'], 'description': 'Export format'}, 'scale': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Export scale'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_text_content', 'description': 'Set the text content of an existing text node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node to modify'}, 'text': {'type': 'string', 'description': 'New text content'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_styles', 'description': 'Get all styles from the current Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_local_components', 'description': 'Get all local components from the Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_annotations', 'description': 'Get all annotations in the current document or specific node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'Optional node ID to get annotations for specific node'}, 'includeCategories': {'type': 'boolean', 'default': True, 'description': 'Whether to include category information'}}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_annotation', 'description': 'Create or update an annotation', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_annotations', 'description': 'Set multiple annotations parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the elements to annotate'}, 'annotations': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False}, 'description': 'Array of annotations to apply'}}, 'required': ['nodeId', 'annotations'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_component_instance', 'description': 'Create an instance of a component in Figma', 'parameters': {'type': 'object', 'properties': {'componentKey': {'type': 'string', 'description': 'Key of the component to instantiate'}, 'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}}, 'required': ['componentKey', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_corner_radius', 'description': 'Set the corner radius of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'radius': {'type': 'number', 'minimum': 0, 'description': 'Corner radius value'}, 'corners': {'type': 'array', 'items': {'type': 'boolean'}, 'minItems': 4, 'maxItems': 4, 'description': 'Optional array of 4 booleans to specify which corners to round [topLeft, topRight, bottomRight, bottomLeft]'}}, 'required': ['nodeId', 'radius'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_text_nodes', 'description': 'Scan all text nodes in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_nodes_by_types', 'description': 'Scan for nodes with specific types in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}, 'types': {'type': 'array', 'items': {'type': 'string'}, 'description': \"Array of node types to find (e.g. ['COMPONENT', 'FRAME'])\"}}, 'required': ['nodeId', 'types'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_text_contents', 'description': 'Set multiple text contents parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the text nodes to replace'}, 'text': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node'}, 'text': {'type': 'string', 'description': 'The replacement text'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False}, 'description': 'Array of text node IDs and their replacement texts'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_mode', 'description': 'Set the layout mode and wrap behavior of a frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}}, 'required': ['nodeId', 'layoutMode'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_padding', 'description': 'Set padding values for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'paddingTop': {'type': 'number', 'description': 'Top padding value'}, 'paddingRight': {'type': 'number', 'description': 'Right padding value'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding value'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding value'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_axis_align', 'description': 'Set primary and counter axis alignment for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment (MIN/MAX = left/right in horizontal, top/bottom in vertical). Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment (MIN/MAX = top/bottom in horizontal, left/right in vertical)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_sizing', 'description': 'Set horizontal and vertical sizing modes for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_item_spacing', 'description': 'Set distance between children in an auto-layout frame', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['nodeId', 'itemSpacing'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_check_connection_status', 'description': 'Check the connection status with Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': '__human_input__', 'description': '\\nRequest input from a human user. Pauses the workflow until input is received.\\n\\nArgs:\\n    request: The human input request\\n\\nReturns:\\n    The input provided by the human\\n\\nRaises:\\n    TimeoutError: If the timeout is exceeded\\n', 'parameters': {'type': 'object', 'properties': {'request': {'description': 'Represents a request for human input.', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'description': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Description'}, 'request_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Request Id'}, 'workflow_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Id'}, 'timeout_seconds': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Timeout Seconds'}, 'metadata': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Metadata'}}, 'required': ['prompt'], 'title': 'HumanInputRequest', 'type': 'object'}}, 'required': ['request']}}}], 'max_tokens': 4096}"}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:43.975335","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Chat in progress","data":{"data":{"progress_action":"Chatting","model":"gpt-4o","agent_name":"agent","chat_turn":1}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:44.438467","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"OpenAI ChatCompletion response:","data":{"data":{"request":{"method":"POST","url":{"_uri_reference":["https","","api.openai.com",null,"/v1/chat/completions",null,null]},"headers":["host","accept-encoding","connection","accept","content-type","user-agent","x-stainless-lang","x-stainless-package-version","x-stainless-os","x-stainless-arch","x-stainless-runtime","x-stainless-runtime-version","authorization","x-stainless-async","x-stainless-retry-count","x-stainless-read-timeout","cookie","content-length"],"extensions":{"timeout":{"connect":5.0,"read":600,"write":"600","pool":"600"}},"stream":[{"capitalize":"<callable: capitalize>","center":"<callable: center>","count":"<callable: count>","decode":"<callable: decode>","endswith":"<callable: endswith>","expandtabs":"<callable: expandtabs>","find":"<callable: find>","fromhex":"<callable: fromhex>","hex":"<callable: hex>","index":"<callable: index>","isalnum":"<callable: isalnum>","isalpha":"<callable: isalpha>","isascii":"<callable: isascii>","isdigit":"<callable: isdigit>","islower":"<callable: islower>","isspace":"<callable: isspace>","istitle":"<callable: istitle>","isupper":"<callable: isupper>","join":"<callable: join>","ljust":"<callable: ljust>","lower":"<callable: lower>","lstrip":"<callable: lstrip>","maketrans":"<callable: maketrans>","partition":"<callable: partition>","removeprefix":"<callable: removeprefix>","removesuffix":"<callable: removesuffix>","replace":"<callable: replace>","rfind":"<callable: rfind>","rindex":"<callable: rindex>","rjust":"<callable: rjust>","rpartition":"<callable: rpartition>","rsplit":"<callable: rsplit>","rstrip":"<callable: rstrip>","split":"<callable: split>","splitlines":"<callable: splitlines>","startswith":"<callable: startswith>","strip":"<callable: strip>","swapcase":"<callable: swapcase>","title":"<callable: title>","translate":"<callable: translate>","upper":"<callable: upper>","zfill":"<callable: zfill>"}],"_content":"b'{\"messages\":[{\"role\":\"system\",\"content\":\"you are an assistant\"},{\"role\":\"user\",\"content\":\"get document info and suggest whats in the image\"},{\"role\":\"assistant\",\"audio\":null,\"refusal\":null,\"name\":\"agent\",\"tool_calls\":[{\"id\":\"call_ILQBE8vYun0Q0dMudf6ZoNOM\",\"function\":{\"arguments\":\"{}\",\"name\":\"figma_get_document_info\"},\"type\":\"function\"},{\"id\":\"call_nzoQk9IkaOC0lHz5XQLQUsLS\",\"function\":{\"arguments\":\"{}\",\"name\":\"figma_get_document_info\"},\"type\":\"function\"}]}],\"model\":\"gpt-4o\",\"max_tokens\":4096,\"stop\":null,\"tools\":[{\"type\":\"function\",\"function\":{\"name\":\"figma_get_document_info\",\"description\":\"Get image of the current page in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_get_selection\",\"description\":\"Get information about the current selection in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_read_my_design\",\"description\":\"Get detailed information about the current selection in Figma, including all node details\",\"parameters\":{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_get_node_info\",\"description\":\"Get detailed information about a specific node in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to get information about\"}},\"required\":[\"nodeId\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_get_nodes_info\",\"description\":\"Get detailed information about multiple nodes in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeIds\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"Array of node IDs to get information about\"}},\"required\":[\"nodeIds\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_create_rectangle\",\"description\":\"Create a new rectangle in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"x\":{\"type\":\"number\",\"description\":\"X position\"},\"y\":{\"type\":\"number\",\"description\":\"Y position\"},\"width\":{\"type\":\"number\",\"description\":\"Width of the rectangle\"},\"height\":{\"type\":\"number\",\"description\":\"Height of the rectangle\"},\"name\":{\"type\":\"string\",\"description\":\"Optional name for the rectangle\"},\"parentId\":{\"type\":\"string\",\"description\":\"Optional parent node ID to append the rectangle to\"}},\"required\":[\"x\",\"y\",\"width\",\"height\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_create_frame\",\"description\":\"Create a new frame in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"x\":{\"type\":\"number\",\"description\":\"X position\"},\"y\":{\"type\":\"number\",\"description\":\"Y position\"},\"width\":{\"type\":\"number\",\"description\":\"Width of the frame\"},\"height\":{\"type\":\"number\",\"description\":\"Height of the frame\"},\"name\":{\"type\":\"string\",\"description\":\"Optional name for the frame\"},\"parentId\":{\"type\":\"string\",\"description\":\"Optional parent node ID to append the frame to\"},\"fillColor\":{\"type\":\"object\",\"properties\":{\"r\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Red component (0-1)\"},\"g\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Green component (0-1)\"},\"b\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Blue component (0-1)\"},\"a\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Alpha component (0-1)\"}},\"required\":[\"r\",\"g\",\"b\"],\"additionalProperties\":false,\"description\":\"Fill color in RGBA format\"},\"strokeColor\":{\"type\":\"object\",\"properties\":{\"r\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Red component (0-1)\"},\"g\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Green component (0-1)\"},\"b\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Blue component (0-1)\"},\"a\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Alpha component (0-1)\"}},\"required\":[\"r\",\"g\",\"b\"],\"additionalProperties\":false,\"description\":\"Stroke color in RGBA format\"},\"strokeWeight\":{\"type\":\"number\",\"exclusiveMinimum\":0,\"description\":\"Stroke weight\"},\"layoutMode\":{\"type\":\"string\",\"enum\":[\"NONE\",\"HORIZONTAL\",\"VERTICAL\"],\"description\":\"Auto-layout mode for the frame\"},\"layoutWrap\":{\"type\":\"string\",\"enum\":[\"NO_WRAP\",\"WRAP\"],\"description\":\"Whether the auto-layout frame wraps its children\"},\"paddingTop\":{\"type\":\"number\",\"description\":\"Top padding for auto-layout frame\"},\"paddingRight\":{\"type\":\"number\",\"description\":\"Right padding for auto-layout frame\"},\"paddingBottom\":{\"type\":\"number\",\"description\":\"Bottom padding for auto-layout frame\"},\"paddingLeft\":{\"type\":\"number\",\"description\":\"Left padding for auto-layout frame\"},\"primaryAxisAlignItems\":{\"type\":\"string\",\"enum\":[\"MIN\",\"MAX\",\"CENTER\",\"SPACE_BETWEEN\"],\"description\":\"Primary axis alignment for auto-layout frame. Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.\"},\"counterAxisAlignItems\":{\"type\":\"string\",\"enum\":[\"MIN\",\"MAX\",\"CENTER\",\"BASELINE\"],\"description\":\"Counter axis alignment for auto-layout frame\"},\"layoutSizingHorizontal\":{\"type\":\"string\",\"enum\":[\"FIXED\",\"HUG\",\"FILL\"],\"description\":\"Horizontal sizing mode for auto-layout frame\"},\"layoutSizingVertical\":{\"type\":\"string\",\"enum\":[\"FIXED\",\"HUG\",\"FILL\"],\"description\":\"Vertical sizing mode for auto-layout frame\"},\"itemSpacing\":{\"type\":\"number\",\"description\":\"Distance between children in auto-layout frame. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.\"}},\"required\":[\"x\",\"y\",\"width\",\"height\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_create_text\",\"description\":\"Create a new text element in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"x\":{\"type\":\"number\",\"description\":\"X position\"},\"y\":{\"type\":\"number\",\"description\":\"Y position\"},\"text\":{\"type\":\"string\",\"description\":\"Text content\"},\"fontSize\":{\"type\":\"number\",\"description\":\"Font size (default: 14)\"},\"fontWeight\":{\"type\":\"number\",\"description\":\"Font weight (e.g., 400 for Regular, 700 for Bold)\"},\"fontColor\":{\"type\":\"object\",\"properties\":{\"r\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Red component (0-1)\"},\"g\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Green component (0-1)\"},\"b\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Blue component (0-1)\"},\"a\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Alpha component (0-1)\"}},\"required\":[\"r\",\"g\",\"b\"],\"additionalProperties\":false,\"description\":\"Font color in RGBA format\"},\"name\":{\"type\":\"string\",\"description\":\"Semantic layer name for the text node\"},\"parentId\":{\"type\":\"string\",\"description\":\"Optional parent node ID to append the text to\"}},\"required\":[\"x\",\"y\",\"text\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_fill_color\",\"description\":\"Set the fill color of a node in Figma can be TextNode or FrameNode\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to modify\"},\"r\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Red component (0-1)\"},\"g\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Green component (0-1)\"},\"b\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Blue component (0-1)\"},\"a\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Alpha component (0-1)\"}},\"required\":[\"nodeId\",\"r\",\"g\",\"b\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_stroke_color\",\"description\":\"Set the stroke color of a node in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to modify\"},\"r\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Red component (0-1)\"},\"g\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Green component (0-1)\"},\"b\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Blue component (0-1)\"},\"a\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Alpha component (0-1)\"},\"weight\":{\"type\":\"number\",\"exclusiveMinimum\":0,\"description\":\"Stroke weight\"}},\"required\":[\"nodeId\",\"r\",\"g\",\"b\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_move_node\",\"description\":\"Move a node to a new position in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to move\"},\"x\":{\"type\":\"number\",\"description\":\"New X position\"},\"y\":{\"type\":\"number\",\"description\":\"New Y position\"}},\"required\":[\"nodeId\",\"x\",\"y\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_clone_node\",\"description\":\"Clone an existing node in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to clone\"},\"x\":{\"type\":\"number\",\"description\":\"New X position for the clone\"},\"y\":{\"type\":\"number\",\"description\":\"New Y position for the clone\"}},\"required\":[\"nodeId\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_resize_node\",\"description\":\"Resize a node in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to resize\"},\"width\":{\"type\":\"number\",\"exclusiveMinimum\":0,\"description\":\"New width\"},\"height\":{\"type\":\"number\",\"exclusiveMinimum\":0,\"description\":\"New height\"}},\"required\":[\"nodeId\",\"width\",\"height\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_delete_node\",\"description\":\"Delete a node from Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to delete\"}},\"required\":[\"nodeId\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_delete_multiple_nodes\",\"description\":\"Delete multiple nodes from Figma at once\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeIds\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"Array of node IDs to delete\"}},\"required\":[\"nodeIds\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_export_node_as_image\",\"description\":\"Export a node as an image from Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to export\"},\"format\":{\"type\":\"string\",\"enum\":[\"PNG\",\"JPG\",\"SVG\",\"PDF\"],\"description\":\"Export format\"},\"scale\":{\"type\":\"number\",\"exclusiveMinimum\":0,\"description\":\"Export scale\"}},\"required\":[\"nodeId\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_text_content\",\"description\":\"Set the text content of an existing text node in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the text node to modify\"},\"text\":{\"type\":\"string\",\"description\":\"New text content\"}},\"required\":[\"nodeId\",\"text\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_get_styles\",\"description\":\"Get all styles from the current Figma document\",\"parameters\":{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_get_local_components\",\"description\":\"Get all local components from the Figma document\",\"parameters\":{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_get_annotations\",\"description\":\"Get all annotations in the current document or specific node\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"Optional node ID to get annotations for specific node\"},\"includeCategories\":{\"type\":\"boolean\",\"default\":true,\"description\":\"Whether to include category information\"}},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_annotation\",\"description\":\"Create or update an annotation\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to annotate\"},\"annotationId\":{\"type\":\"string\",\"description\":\"The ID of the annotation to update (if updating existing annotation)\"},\"labelMarkdown\":{\"type\":\"string\",\"description\":\"The annotation text in markdown format\"},\"categoryId\":{\"type\":\"string\",\"description\":\"The ID of the annotation category\"},\"properties\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\"}},\"required\":[\"type\"],\"additionalProperties\":false},\"description\":\"Additional properties for the annotation\"}},\"required\":[\"nodeId\",\"labelMarkdown\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_multiple_annotations\",\"description\":\"Set multiple annotations parallelly in a node\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node containing the elements to annotate\"},\"annotations\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to annotate\"},\"labelMarkdown\":{\"type\":\"string\",\"description\":\"The annotation text in markdown format\"},\"categoryId\":{\"type\":\"string\",\"description\":\"The ID of the annotation category\"},\"annotationId\":{\"type\":\"string\",\"description\":\"The ID of the annotation to update (if updating existing annotation)\"},\"properties\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\"}},\"required\":[\"type\"],\"additionalProperties\":false},\"description\":\"Additional properties for the annotation\"}},\"required\":[\"nodeId\",\"labelMarkdown\"],\"additionalProperties\":false},\"description\":\"Array of annotations to apply\"}},\"required\":[\"nodeId\",\"annotations\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_create_component_instance\",\"description\":\"Create an instance of a component in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"componentKey\":{\"type\":\"string\",\"description\":\"Key of the component to instantiate\"},\"x\":{\"type\":\"number\",\"description\":\"X position\"},\"y\":{\"type\":\"number\",\"description\":\"Y position\"}},\"required\":[\"componentKey\",\"x\",\"y\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_corner_radius\",\"description\":\"Set the corner radius of a node in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node to modify\"},\"radius\":{\"type\":\"number\",\"minimum\":0,\"description\":\"Corner radius value\"},\"corners\":{\"type\":\"array\",\"items\":{\"type\":\"boolean\"},\"minItems\":4,\"maxItems\":4,\"description\":\"Optional array of 4 booleans to specify which corners to round [topLeft, topRight, bottomRight, bottomLeft]\"}},\"required\":[\"nodeId\",\"radius\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_scan_text_nodes\",\"description\":\"Scan all text nodes in the selected Figma node\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"ID of the node to scan\"}},\"required\":[\"nodeId\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_scan_nodes_by_types\",\"description\":\"Scan for nodes with specific types in the selected Figma node\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"ID of the node to scan\"},\"types\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"Array of node types to find (e.g. [\\'COMPONENT\\', \\'FRAME\\'])\"}},\"required\":[\"nodeId\",\"types\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_multiple_text_contents\",\"description\":\"Set multiple text contents parallelly in a node\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the node containing the text nodes to replace\"},\"text\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the text node\"},\"text\":{\"type\":\"string\",\"description\":\"The replacement text\"}},\"required\":[\"nodeId\",\"text\"],\"additionalProperties\":false},\"description\":\"Array of text node IDs and their replacement texts\"}},\"required\":[\"nodeId\",\"text\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_layout_mode\",\"description\":\"Set the layout mode and wrap behavior of a frame in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the frame to modify\"},\"layoutMode\":{\"type\":\"string\",\"enum\":[\"NONE\",\"HORIZONTAL\",\"VERTICAL\"],\"description\":\"Layout mode for the frame\"},\"layoutWrap\":{\"type\":\"string\",\"enum\":[\"NO_WRAP\",\"WRAP\"],\"description\":\"Whether the auto-layout frame wraps its children\"}},\"required\":[\"nodeId\",\"layoutMode\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_padding\",\"description\":\"Set padding values for an auto-layout frame in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the frame to modify\"},\"paddingTop\":{\"type\":\"number\",\"description\":\"Top padding value\"},\"paddingRight\":{\"type\":\"number\",\"description\":\"Right padding value\"},\"paddingBottom\":{\"type\":\"number\",\"description\":\"Bottom padding value\"},\"paddingLeft\":{\"type\":\"number\",\"description\":\"Left padding value\"}},\"required\":[\"nodeId\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_axis_align\",\"description\":\"Set primary and counter axis alignment for an auto-layout frame in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the frame to modify\"},\"primaryAxisAlignItems\":{\"type\":\"string\",\"enum\":[\"MIN\",\"MAX\",\"CENTER\",\"SPACE_BETWEEN\"],\"description\":\"Primary axis alignment (MIN/MAX = left/right in horizontal, top/bottom in vertical). Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.\"},\"counterAxisAlignItems\":{\"type\":\"string\",\"enum\":[\"MIN\",\"MAX\",\"CENTER\",\"BASELINE\"],\"description\":\"Counter axis alignment (MIN/MAX = top/bottom in horizontal, left/right in vertical)\"}},\"required\":[\"nodeId\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_layout_sizing\",\"description\":\"Set horizontal and vertical sizing modes for an auto-layout frame in Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the frame to modify\"},\"layoutSizingHorizontal\":{\"type\":\"string\",\"enum\":[\"FIXED\",\"HUG\",\"FILL\"],\"description\":\"Horizontal sizing mode (HUG for frames/text only, FILL for auto-layout children only)\"},\"layoutSizingVertical\":{\"type\":\"string\",\"enum\":[\"FIXED\",\"HUG\",\"FILL\"],\"description\":\"Vertical sizing mode (HUG for frames/text only, FILL for auto-layout children only)\"}},\"required\":[\"nodeId\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_set_item_spacing\",\"description\":\"Set distance between children in an auto-layout frame\",\"parameters\":{\"type\":\"object\",\"properties\":{\"nodeId\":{\"type\":\"string\",\"description\":\"The ID of the frame to modify\"},\"itemSpacing\":{\"type\":\"number\",\"description\":\"Distance between children. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.\"}},\"required\":[\"nodeId\",\"itemSpacing\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"figma_check_connection_status\",\"description\":\"Check the connection status with Figma\",\"parameters\":{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}},{\"type\":\"function\",\"function\":{\"name\":\"__human_input__\",\"description\":\"\\\\nRequest input from a human user. Pauses the workflow until input is received.\\\\n\\\\nArgs:\\\\n    request: The human input request\\\\n\\\\nReturns:\\\\n    The input provided by the human\\\\n\\\\nRaises:\\\\n    TimeoutError: If the timeout is exceeded\\\\n\",\"parameters\":{\"type\":\"object\",\"properties\":{\"request\":{\"description\":\"Represents a request for human input.\",\"properties\":{\"prompt\":{\"title\":\"Prompt\",\"type\":\"string\"},\"description\":{\"anyOf\":[{\"type\":\"string\"},{\"type\":\"null\"}],\"default\":null,\"title\":\"Description\"},\"request_id\":{\"anyOf\":[{\"type\":\"string\"},{\"type\":\"null\"}],\"default\":null,\"title\":\"Request Id\"},\"workflow_id\":{\"anyOf\":[{\"type\":\"string\"},{\"type\":\"null\"}],\"default\":null,\"title\":\"Workflow Id\"},\"timeout_seconds\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"null\"}],\"default\":null,\"title\":\"Timeout Seconds\"},\"metadata\":{\"anyOf\":[{\"additionalProperties\":true,\"type\":\"object\"},{\"type\":\"null\"}],\"default\":null,\"title\":\"Metadata\"}},\"required\":[\"prompt\"],\"title\":\"HumanInputRequest\",\"type\":\"object\"}},\"required\":[\"request\"]}}}]}'"},"message":"Error code: 400 - {'error': {'message': \"An assistant message with 'tool_calls' must be followed by tool messages responding to each 'tool_call_id'. The following tool_call_ids did not have response messages: call_ILQBE8vYun0Q0dMudf6ZoNOM, call_nzoQk9IkaOC0lHz5XQLQUsLS\", 'type': 'invalid_request_error', 'param': 'messages', 'code': None}}","body":{"message":"An assistant message with 'tool_calls' must be followed by tool messages responding to each 'tool_call_id'. The following tool_call_ids did not have response messages: call_ILQBE8vYun0Q0dMudf6ZoNOM, call_nzoQk9IkaOC0lHz5XQLQUsLS","type":"invalid_request_error","param":"messages","code":null},"code":null,"param":"messages","type":"invalid_request_error","response":"<httpx.Response [400] https://api.openai.com/v1/chat/completions>","status_code":400,"request_id":"req_8b6e890e346c607a67d66b8a016a42a8"}}}
{"level":"ERROR","timestamp":"2025-04-22T02:53:44.438570","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Error: Error code: 400 - {'error': {'message': \"An assistant message with 'tool_calls' must be followed by tool messages responding to each 'tool_call_id'. The following tool_call_ids did not have response messages: call_ILQBE8vYun0Q0dMudf6ZoNOM, call_nzoQk9IkaOC0lHz5XQLQUsLS\", 'type': 'invalid_request_error', 'param': 'messages', 'code': None}}"}
{"level":"DEBUG","timestamp":"2025-04-22T02:53:44.438679","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Chat finished","data":{"data":{"progress_action":"Finished","model":"gpt-4o","agent_name":"agent"}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:12.628354","namespace":"mcp_agent.mcp.stdio","message":"Terminating process (PID: 77388)"}
{"level":"WARNING","timestamp":"2025-04-22T02:54:12.628412","namespace":"mcp_agent.mcp.stdio","message":"Error terminating process (PID: 77388): "}
{"level":"INFO","timestamp":"2025-04-22T02:54:14.023210","namespace":"mcp_agent.context","message":"Configuring logger with level: debug"}
{"level":"INFO","timestamp":"2025-04-22T02:54:14.023349","namespace":"mcp_agent.mcp_agent","message":"MCPAgent initialized","data":{"data":{"progress_action":"Running","target":"mcp_agent","agent_name":"mcp_application_loop","session_id":"368443f6-628a-4a76-9440-a4c9b24d730d"}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.023668","namespace":"mcp_agent.mcp.mcp_connection_manager","message":"figma: Found server configuration=","data":{"data":{"name":null,"description":null,"transport":"stdio","command":"node","args":["/Users/daeheon_macbook/Documents/KIXLAB/25-1-design-forge/exploration-code/samsung-cxi-mcp-server/src/talk_to_figma_mcp/dist/server.js"],"read_timeout_seconds":null,"url":null,"auth":null,"headers":null,"roots":null,"env":null}}}
{"level":"INFO","timestamp":"2025-04-22T02:54:14.023772","namespace":"mcp_agent.mcp.mcp_connection_manager","message":"figma: Up and running with a persistent connection!"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.026966","namespace":"mcp_agent.mcp.stdio","message":"Started process 'node' with PID: 77510"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.027248","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"initialize","params":{"meta":null,"protocolVersion":"2024-11-05","capabilities":{"experimental":null,"sampling":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp","version":"0.1.0"}}}}}
{"level":"INFO","timestamp":"2025-04-22T02:54:14.080971","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Connecting to Figma socket server at ws://localhost:3055..."}
{"level":"INFO","timestamp":"2025-04-22T02:54:14.086433","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] FigmaMCP server running on stdio"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.088845","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: response=","data":{"data":{"meta":null,"protocolVersion":"2024-11-05","capabilities":{"experimental":null,"logging":null,"prompts":{"listChanged":true},"resources":null,"tools":{"listChanged":"True"}},"serverInfo":{"name":"DesignForgeMCP","version":"1.0.0"},"instructions":null}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.088949","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_notification:","data":{"data":{"method":"notifications/initialized","params":null}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.089422","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"tools/list","params":null,"cursor":null}}}
{"level":"INFO","timestamp":"2025-04-22T02:54:14.089694","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Connected to Figma socket server"}
{"level":"INFO","timestamp":"2025-04-22T02:54:14.090336","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Received broadcast message: \"Connected to chat server\""}
{"level":"INFO","timestamp":"2025-04-22T02:54:14.093117","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Received broadcast message: {\"id\":\"7d1593a8-2be2-485a-86ba-b78f8cb1530c\",\"result\":\"Connected to chat server\"}"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.093221","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: response=","data":{"data":{"meta":null,"nextCursor":null,"tools":[{"name":"get_document_info","description":"Get image of the current page in Figma","inputSchema":{"type":"object","properties":{},"additionalProperties":false,"$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_selection","description":"Get information about the current selection in Figma","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"read_my_design","description":"Get detailed information about the current selection in Figma, including all node details","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_node_info","description":"Get detailed information about a specific node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to get information about"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_nodes_info","description":"Get detailed information about multiple nodes in Figma","inputSchema":{"type":"object","properties":{"nodeIds":{"type":"array","items":{"type":"string"},"description":"Array of node IDs to get information about"}},"required":["nodeIds"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"create_rectangle","description":"Create a new rectangle in Figma","inputSchema":{"type":"object","properties":{"x":{"type":"number","description":"X position"},"y":{"type":"number","description":"Y position"},"width":{"type":"number","description":"Width of the rectangle"},"height":{"type":"number","description":"Height of the rectangle"},"name":{"type":"string","description":"Optional name for the rectangle"},"parentId":{"type":"string","description":"Optional parent node ID to append the rectangle to"}},"required":["x","y","width","height"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"create_frame","description":"Create a new frame in Figma","inputSchema":{"type":"object","properties":{"x":{"type":"number","description":"X position"},"y":{"type":"number","description":"Y position"},"width":{"type":"number","description":"Width of the frame"},"height":{"type":"number","description":"Height of the frame"},"name":{"type":"string","description":"Optional name for the frame"},"parentId":{"type":"string","description":"Optional parent node ID to append the frame to"},"fillColor":{"type":"object","properties":{"r":{"type":"number","minimum":0,"maximum":1,"description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"}},"required":["r","g","b"],"additionalProperties":"False","description":"Fill color in RGBA format"},"strokeColor":{"type":"object","properties":{"r":{"type":"number","minimum":"0","maximum":"1","description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"}},"required":["r","g","b"],"additionalProperties":"False","description":"Stroke color in RGBA format"},"strokeWeight":{"type":"number","exclusiveMinimum":"0","description":"Stroke weight"},"layoutMode":{"type":"string","enum":["NONE","HORIZONTAL","VERTICAL"],"description":"Auto-layout mode for the frame"},"layoutWrap":{"type":"string","enum":["NO_WRAP","WRAP"],"description":"Whether the auto-layout frame wraps its children"},"paddingTop":{"type":"number","description":"Top padding for auto-layout frame"},"paddingRight":{"type":"number","description":"Right padding for auto-layout frame"},"paddingBottom":{"type":"number","description":"Bottom padding for auto-layout frame"},"paddingLeft":{"type":"number","description":"Left padding for auto-layout frame"},"primaryAxisAlignItems":{"type":"string","enum":["MIN","MAX","CENTER","SPACE_BETWEEN"],"description":"Primary axis alignment for auto-layout frame. Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced."},"counterAxisAlignItems":{"type":"string","enum":["MIN","MAX","CENTER","BASELINE"],"description":"Counter axis alignment for auto-layout frame"},"layoutSizingHorizontal":{"type":"string","enum":["FIXED","HUG","FILL"],"description":"Horizontal sizing mode for auto-layout frame"},"layoutSizingVertical":{"type":"string","enum":["FIXED","HUG","FILL"],"description":"Vertical sizing mode for auto-layout frame"},"itemSpacing":{"type":"number","description":"Distance between children in auto-layout frame. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN."}},"required":["x","y","width","height"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"create_text","description":"Create a new text element in Figma","inputSchema":{"type":"object","properties":{"x":{"type":"number","description":"X position"},"y":{"type":"number","description":"Y position"},"text":{"type":"string","description":"Text content"},"fontSize":{"type":"number","description":"Font size (default: 14)"},"fontWeight":{"type":"number","description":"Font weight (e.g., 400 for Regular, 700 for Bold)"},"fontColor":{"type":"object","properties":{"r":{"type":"number","minimum":"0","maximum":"1","description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"}},"required":["r","g","b"],"additionalProperties":"False","description":"Font color in RGBA format"},"name":{"type":"string","description":"Semantic layer name for the text node"},"parentId":{"type":"string","description":"Optional parent node ID to append the text to"}},"required":["x","y","text"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_fill_color","description":"Set the fill color of a node in Figma can be TextNode or FrameNode","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to modify"},"r":{"type":"number","minimum":"0","maximum":"1","description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"}},"required":["nodeId","r","g","b"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_stroke_color","description":"Set the stroke color of a node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to modify"},"r":{"type":"number","minimum":"0","maximum":"1","description":"Red component (0-1)"},"g":{"type":"number","minimum":"0","maximum":"1","description":"Green component (0-1)"},"b":{"type":"number","minimum":"0","maximum":"1","description":"Blue component (0-1)"},"a":{"type":"number","minimum":"0","maximum":"1","description":"Alpha component (0-1)"},"weight":{"type":"number","exclusiveMinimum":"0","description":"Stroke weight"}},"required":["nodeId","r","g","b"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"move_node","description":"Move a node to a new position in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to move"},"x":{"type":"number","description":"New X position"},"y":{"type":"number","description":"New Y position"}},"required":["nodeId","x","y"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"clone_node","description":"Clone an existing node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to clone"},"x":{"type":"number","description":"New X position for the clone"},"y":{"type":"number","description":"New Y position for the clone"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"resize_node","description":"Resize a node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to resize"},"width":{"type":"number","exclusiveMinimum":"0","description":"New width"},"height":{"type":"number","exclusiveMinimum":"0","description":"New height"}},"required":["nodeId","width","height"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"delete_node","description":"Delete a node from Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to delete"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"delete_multiple_nodes","description":"Delete multiple nodes from Figma at once","inputSchema":{"type":"object","properties":{"nodeIds":{"type":"array","items":{"type":"string"},"description":"Array of node IDs to delete"}},"required":["nodeIds"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"export_node_as_image","description":"Export a node as an image from Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to export"},"format":{"type":"string","enum":["PNG","JPG","SVG","PDF"],"description":"Export format"},"scale":{"type":"number","exclusiveMinimum":"0","description":"Export scale"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_text_content","description":"Set the text content of an existing text node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the text node to modify"},"text":{"type":"string","description":"New text content"}},"required":["nodeId","text"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_styles","description":"Get all styles from the current Figma document","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_local_components","description":"Get all local components from the Figma document","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"get_annotations","description":"Get all annotations in the current document or specific node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"Optional node ID to get annotations for specific node"},"includeCategories":{"type":"boolean","default":true,"description":"Whether to include category information"}},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_annotation","description":"Create or update an annotation","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to annotate"},"annotationId":{"type":"string","description":"The ID of the annotation to update (if updating existing annotation)"},"labelMarkdown":{"type":"string","description":"The annotation text in markdown format"},"categoryId":{"type":"string","description":"The ID of the annotation category"},"properties":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"}},"required":["type"],"additionalProperties":"False"},"description":"Additional properties for the annotation"}},"required":["nodeId","labelMarkdown"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_multiple_annotations","description":"Set multiple annotations parallelly in a node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node containing the elements to annotate"},"annotations":{"type":"array","items":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to annotate"},"labelMarkdown":{"type":"string","description":"The annotation text in markdown format"},"categoryId":{"type":"string","description":"The ID of the annotation category"},"annotationId":{"type":"string","description":"The ID of the annotation to update (if updating existing annotation)"},"properties":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"}},"required":["type"],"additionalProperties":"False"},"description":"Additional properties for the annotation"}},"required":["nodeId","labelMarkdown"],"additionalProperties":"False"},"description":"Array of annotations to apply"}},"required":["nodeId","annotations"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"create_component_instance","description":"Create an instance of a component in Figma","inputSchema":{"type":"object","properties":{"componentKey":{"type":"string","description":"Key of the component to instantiate"},"x":{"type":"number","description":"X position"},"y":{"type":"number","description":"Y position"}},"required":["componentKey","x","y"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_corner_radius","description":"Set the corner radius of a node in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node to modify"},"radius":{"type":"number","minimum":"0","description":"Corner radius value"},"corners":{"type":"array","items":{"type":"boolean"},"minItems":4,"maxItems":"4","description":"Optional array of 4 booleans to specify which corners to round [topLeft, topRight, bottomRight, bottomLeft]"}},"required":["nodeId","radius"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"scan_text_nodes","description":"Scan all text nodes in the selected Figma node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"ID of the node to scan"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"scan_nodes_by_types","description":"Scan for nodes with specific types in the selected Figma node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"ID of the node to scan"},"types":{"type":"array","items":{"type":"string"},"description":"Array of node types to find (e.g. ['COMPONENT', 'FRAME'])"}},"required":["nodeId","types"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_multiple_text_contents","description":"Set multiple text contents parallelly in a node","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the node containing the text nodes to replace"},"text":{"type":"array","items":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the text node"},"text":{"type":"string","description":"The replacement text"}},"required":["nodeId","text"],"additionalProperties":"False"},"description":"Array of text node IDs and their replacement texts"}},"required":["nodeId","text"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_layout_mode","description":"Set the layout mode and wrap behavior of a frame in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"layoutMode":{"type":"string","enum":["NONE","HORIZONTAL","VERTICAL"],"description":"Layout mode for the frame"},"layoutWrap":{"type":"string","enum":["NO_WRAP","WRAP"],"description":"Whether the auto-layout frame wraps its children"}},"required":["nodeId","layoutMode"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_padding","description":"Set padding values for an auto-layout frame in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"paddingTop":{"type":"number","description":"Top padding value"},"paddingRight":{"type":"number","description":"Right padding value"},"paddingBottom":{"type":"number","description":"Bottom padding value"},"paddingLeft":{"type":"number","description":"Left padding value"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_axis_align","description":"Set primary and counter axis alignment for an auto-layout frame in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"primaryAxisAlignItems":{"type":"string","enum":["MIN","MAX","CENTER","SPACE_BETWEEN"],"description":"Primary axis alignment (MIN/MAX = left/right in horizontal, top/bottom in vertical). Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced."},"counterAxisAlignItems":{"type":"string","enum":["MIN","MAX","CENTER","BASELINE"],"description":"Counter axis alignment (MIN/MAX = top/bottom in horizontal, left/right in vertical)"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_layout_sizing","description":"Set horizontal and vertical sizing modes for an auto-layout frame in Figma","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"layoutSizingHorizontal":{"type":"string","enum":["FIXED","HUG","FILL"],"description":"Horizontal sizing mode (HUG for frames/text only, FILL for auto-layout children only)"},"layoutSizingVertical":{"type":"string","enum":["FIXED","HUG","FILL"],"description":"Vertical sizing mode (HUG for frames/text only, FILL for auto-layout children only)"}},"required":["nodeId"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"set_item_spacing","description":"Set distance between children in an auto-layout frame","inputSchema":{"type":"object","properties":{"nodeId":{"type":"string","description":"The ID of the frame to modify"},"itemSpacing":{"type":"number","description":"Distance between children. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN."}},"required":["nodeId","itemSpacing"],"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}},{"name":"check_connection_status","description":"Check the connection status with Figma","inputSchema":{"type":"object","properties":{},"additionalProperties":"False","$schema":"http://json-schema.org/draft-07/schema#"}}]}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.094259","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"prompts/list","params":null,"cursor":null}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.094805","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: response=","data":{"data":{"meta":null,"nextCursor":null,"prompts":[{"name":"design_strategy","description":"Best practices for working with Figma designs","arguments":null},{"name":"read_design_strategy","description":"Best practices for reading Figma designs","arguments":null},{"name":"text_replacement_strategy","description":"Systematic approach for replacing text in Figma designs","arguments":null},{"name":"annotation_conversion_strategy","description":"Strategy for converting manual annotations to Figma's native annotations","arguments":null}]}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:14.094859","namespace":"mcp_agent.mcp.mcp_aggregator.agent","message":"MCP Aggregator initialized for server 'figma'","data":{"data":{"progress_action":"Initialized","server_name":"figma","agent_name":"agent","tool_count":33,"prompt_count":4}}}
{"level":"INFO","timestamp":"2025-04-22T02:54:14.156660","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Received broadcast message: \"A new user has joined the chat\""}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:22.069054","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"{'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': 'you are an assistant'}, {'role': 'user', 'content': 'get document info and describe the image'}], 'stop': None, 'tools': [{'type': 'function', 'function': {'name': 'figma_get_document_info', 'description': 'Get image of the current page in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_selection', 'description': 'Get information about the current selection in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_read_my_design', 'description': 'Get detailed information about the current selection in Figma, including all node details', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_node_info', 'description': 'Get detailed information about a specific node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to get information about'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_nodes_info', 'description': 'Get detailed information about multiple nodes in Figma', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to get information about'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_rectangle', 'description': 'Create a new rectangle in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the rectangle'}, 'height': {'type': 'number', 'description': 'Height of the rectangle'}, 'name': {'type': 'string', 'description': 'Optional name for the rectangle'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the rectangle to'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_frame', 'description': 'Create a new frame in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the frame'}, 'height': {'type': 'number', 'description': 'Height of the frame'}, 'name': {'type': 'string', 'description': 'Optional name for the frame'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the frame to'}, 'fillColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Fill color in RGBA format'}, 'strokeColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Stroke color in RGBA format'}, 'strokeWeight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Auto-layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}, 'paddingTop': {'type': 'number', 'description': 'Top padding for auto-layout frame'}, 'paddingRight': {'type': 'number', 'description': 'Right padding for auto-layout frame'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding for auto-layout frame'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding for auto-layout frame'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment for auto-layout frame. Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment for auto-layout frame'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode for auto-layout frame'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode for auto-layout frame'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children in auto-layout frame. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_text', 'description': 'Create a new text element in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'text': {'type': 'string', 'description': 'Text content'}, 'fontSize': {'type': 'number', 'description': 'Font size (default: 14)'}, 'fontWeight': {'type': 'number', 'description': 'Font weight (e.g., 400 for Regular, 700 for Bold)'}, 'fontColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Font color in RGBA format'}, 'name': {'type': 'string', 'description': 'Semantic layer name for the text node'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the text to'}}, 'required': ['x', 'y', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_fill_color', 'description': 'Set the fill color of a node in Figma can be TextNode or FrameNode', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_stroke_color', 'description': 'Set the stroke color of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}, 'weight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_move_node', 'description': 'Move a node to a new position in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to move'}, 'x': {'type': 'number', 'description': 'New X position'}, 'y': {'type': 'number', 'description': 'New Y position'}}, 'required': ['nodeId', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_clone_node', 'description': 'Clone an existing node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to clone'}, 'x': {'type': 'number', 'description': 'New X position for the clone'}, 'y': {'type': 'number', 'description': 'New Y position for the clone'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_resize_node', 'description': 'Resize a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to resize'}, 'width': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New width'}, 'height': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New height'}}, 'required': ['nodeId', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_node', 'description': 'Delete a node from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to delete'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_multiple_nodes', 'description': 'Delete multiple nodes from Figma at once', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to delete'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_export_node_as_image', 'description': 'Export a node as an image from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to export'}, 'format': {'type': 'string', 'enum': ['PNG', 'JPG', 'SVG', 'PDF'], 'description': 'Export format'}, 'scale': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Export scale'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_text_content', 'description': 'Set the text content of an existing text node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node to modify'}, 'text': {'type': 'string', 'description': 'New text content'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_styles', 'description': 'Get all styles from the current Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_local_components', 'description': 'Get all local components from the Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_annotations', 'description': 'Get all annotations in the current document or specific node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'Optional node ID to get annotations for specific node'}, 'includeCategories': {'type': 'boolean', 'default': True, 'description': 'Whether to include category information'}}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_annotation', 'description': 'Create or update an annotation', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_annotations', 'description': 'Set multiple annotations parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the elements to annotate'}, 'annotations': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False}, 'description': 'Array of annotations to apply'}}, 'required': ['nodeId', 'annotations'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_component_instance', 'description': 'Create an instance of a component in Figma', 'parameters': {'type': 'object', 'properties': {'componentKey': {'type': 'string', 'description': 'Key of the component to instantiate'}, 'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}}, 'required': ['componentKey', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_corner_radius', 'description': 'Set the corner radius of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'radius': {'type': 'number', 'minimum': 0, 'description': 'Corner radius value'}, 'corners': {'type': 'array', 'items': {'type': 'boolean'}, 'minItems': 4, 'maxItems': 4, 'description': 'Optional array of 4 booleans to specify which corners to round [topLeft, topRight, bottomRight, bottomLeft]'}}, 'required': ['nodeId', 'radius'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_text_nodes', 'description': 'Scan all text nodes in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_nodes_by_types', 'description': 'Scan for nodes with specific types in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}, 'types': {'type': 'array', 'items': {'type': 'string'}, 'description': \"Array of node types to find (e.g. ['COMPONENT', 'FRAME'])\"}}, 'required': ['nodeId', 'types'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_text_contents', 'description': 'Set multiple text contents parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the text nodes to replace'}, 'text': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node'}, 'text': {'type': 'string', 'description': 'The replacement text'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False}, 'description': 'Array of text node IDs and their replacement texts'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_mode', 'description': 'Set the layout mode and wrap behavior of a frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}}, 'required': ['nodeId', 'layoutMode'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_padding', 'description': 'Set padding values for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'paddingTop': {'type': 'number', 'description': 'Top padding value'}, 'paddingRight': {'type': 'number', 'description': 'Right padding value'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding value'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding value'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_axis_align', 'description': 'Set primary and counter axis alignment for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment (MIN/MAX = left/right in horizontal, top/bottom in vertical). Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment (MIN/MAX = top/bottom in horizontal, left/right in vertical)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_sizing', 'description': 'Set horizontal and vertical sizing modes for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_item_spacing', 'description': 'Set distance between children in an auto-layout frame', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['nodeId', 'itemSpacing'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_check_connection_status', 'description': 'Check the connection status with Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': '__human_input__', 'description': '\\nRequest input from a human user. Pauses the workflow until input is received.\\n\\nArgs:\\n    request: The human input request\\n\\nReturns:\\n    The input provided by the human\\n\\nRaises:\\n    TimeoutError: If the timeout is exceeded\\n', 'parameters': {'type': 'object', 'properties': {'request': {'description': 'Represents a request for human input.', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'description': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Description'}, 'request_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Request Id'}, 'workflow_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Id'}, 'timeout_seconds': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Timeout Seconds'}, 'metadata': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Metadata'}}, 'required': ['prompt'], 'title': 'HumanInputRequest', 'type': 'object'}}, 'required': ['request']}}}], 'max_tokens': 4096}"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:22.069090","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Chat in progress","data":{"data":{"progress_action":"Chatting","model":"gpt-4o","agent_name":"agent","chat_turn":1}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:23.717101","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"OpenAI ChatCompletion response:","data":{"data":{"id":"chatcmpl-BOpdWYjJrZT5WafhJJxmGQAbIqJ5d","choices":[{"finish_reason":"tool_calls","index":0,"logprobs":null,"message":{"content":null,"refusal":null,"role":"assistant","annotations":[],"audio":null,"function_call":null,"tool_calls":[{"id":"call_9VVMSPnvIUcj6uIBKqzsqGvl","function":{"arguments":"{}","name":"figma_get_document_info"},"type":"function"},{"id":"call_gsBfOjQObT8QflIbRFGWWi5n","function":{"arguments":"{}","name":"figma_get_image_of_current_page"},"type":"function"}]}}],"created":1745258062,"model":"gpt-4o-2024-08-06","object":"chat.completion","service_tier":"default","system_fingerprint":"fp_f7a584cf1f","usage":{"completion_tokens":48,"prompt_tokens":3051,"total_tokens":3099,"completion_tokens_details":{"accepted_prediction_tokens":0,"audio_tokens":0,"reasoning_tokens":0,"rejected_prediction_tokens":0},"prompt_tokens_details":{"audio_tokens":0,"cached_tokens":2944}}}}}
{"level":"INFO","timestamp":"2025-04-22T02:54:23.722766","namespace":"mcp_agent.mcp.mcp_aggregator.agent","message":"Requesting tool call","data":{"data":{"progress_action":"Calling Tool","tool_name":"get_document_info","server_name":"figma","agent_name":"agent"}}}
{"level":"INFO","timestamp":"2025-04-22T02:54:23.722967","namespace":"mcp_agent.mcp.mcp_aggregator.agent","message":"Requesting tool call","data":{"data":{"progress_action":"Calling Tool","tool_name":"get_image_of_current_page","server_name":"figma","agent_name":"agent"}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:23.724006","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"tools/call","params":{"meta":null,"name":"get_document_info","arguments":{}}}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:23.724489","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: request=","data":{"data":{"method":"tools/call","params":{"meta":null,"name":"get_image_of_current_page","arguments":{}}}}}
{"level":"INFO","timestamp":"2025-04-22T02:54:23.726973","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Sending command to Figma: get_document_info\n[DEBUG] Request details: {\"id\":\"603306a2-7b51-4fa6-8587-d19608cd662d\",\"type\":\"message\",\"message\":{\"id\":\"603306a2-7b51-4fa6-8587-d19608cd662d\",\"command\":\"get_document_info\",\"params\":{\"commandId\":\"603306a2-7b51-4fa6-8587-d19608cd662d\"}}}"}
{"level":"INFO","timestamp":"2025-04-22T02:54:23.728245","namespace":"mcp_agent.mcp.stdio.mcpserver.stderr","message":"[INFO] Received broadcast message: {\"id\":\"603306a2-7b51-4fa6-8587-d19608cd662d\",\"command\":\"get_document_info\",\"params\":{\"commandId\":\"603306a2-7b51-4fa6-8587-d19608cd662d\"}}"}
{"level":"ERROR","timestamp":"2025-04-22T02:54:23.728587","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request failed: MCP error -32602: Tool get_image_of_current_page not found"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:23.934521","namespace":"mcp_agent.mcp.mcp_agent_client_session","message":"send_request: response=","data":{"data":{"meta":null,"content":[{"type":"text","text":"{\"name\":\"Page 1\",\"id\":\"0:1\",\"type\":\"PAGE\",\"children\":[{\"id\":\"1:2\",\"name\":\"Frame 1\",\"type\":\"FRAME\"},{\"id\":\"44:60\",\"name\":\"Vector\",\"type\":\"FRAME\"},{\"id\":\"88:62\",\"name\":\"Rectangle\",\"type\":\"RECTANGLE\"}],\"currentPage\":{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3},\"pages\":[{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3}]}","annotations":null},{"type":"image","data":"","mimeType":"image/png","annotations":null}],"isError":false}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:23.935289","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Iteration 0: Tool call results: [{'role': 'tool', 'tool_call_id': 'call_9VVMSPnvIUcj6uIBKqzsqGvl', 'content': '{\\'type\\': \\'text\\', \\'text\\': \\'{\"name\":\"Page 1\",\"id\":\"0:1\",\"type\":\"PAGE\",\"children\":[{\"id\":\"1:2\",\"name\":\"Frame 1\",\"type\":\"FRAME\"},{\"id\":\"44:60\",\"name\":\"Vector\",\"type\":\"FRAME\"},{\"id\":\"88:62\",\"name\":\"Rectangle\",\"type\":\"RECTANGLE\"}],\"currentPage\":{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3},\"pages\":[{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3}]}\\'}\\n{\\'type\\': \\'input_image\\', \\'image_url\\': \\'\\'}'}, {'role': 'tool', 'tool_call_id': 'call_gsBfOjQObT8QflIbRFGWWi5n', 'content': '{\\'type\\': \\'text\\', \\'text\\': \"Failed to call tool \\'get_image_of_current_page\\' on server \\'figma\\': MCP error -32602: Tool get_image_of_current_page not found\"}'}]"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:23.935786","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"{'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': 'you are an assistant'}, {'role': 'user', 'content': 'get document info and describe the image'}, {'role': 'assistant', 'audio': None, 'refusal': None, 'name': 'agent', 'tool_calls': [ChatCompletionMessageToolCall(id='call_9VVMSPnvIUcj6uIBKqzsqGvl', function=Function(arguments='{}', name='figma_get_document_info'), type='function'), ChatCompletionMessageToolCall(id='call_gsBfOjQObT8QflIbRFGWWi5n', function=Function(arguments='{}', name='figma_get_image_of_current_page'), type='function')]}, {'role': 'tool', 'tool_call_id': 'call_9VVMSPnvIUcj6uIBKqzsqGvl', 'content': '{\\'type\\': \\'text\\', \\'text\\': \\'{\"name\":\"Page 1\",\"id\":\"0:1\",\"type\":\"PAGE\",\"children\":[{\"id\":\"1:2\",\"name\":\"Frame 1\",\"type\":\"FRAME\"},{\"id\":\"44:60\",\"name\":\"Vector\",\"type\":\"FRAME\"},{\"id\":\"88:62\",\"name\":\"Rectangle\",\"type\":\"RECTANGLE\"}],\"currentPage\":{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3},\"pages\":[{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3}]}\\'}\\n{\\'type\\': \\'input_image\\', \\'image_url\\': \\'\\'}'}, {'role': 'tool', 'tool_call_id': 'call_gsBfOjQObT8QflIbRFGWWi5n', 'content': '{\\'type\\': \\'text\\', \\'text\\': \"Failed to call tool \\'get_image_of_current_page\\' on server \\'figma\\': MCP error -32602: Tool get_image_of_current_page not found\"}'}], 'stop': None, 'tools': [{'type': 'function', 'function': {'name': 'figma_get_document_info', 'description': 'Get image of the current page in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_selection', 'description': 'Get information about the current selection in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_read_my_design', 'description': 'Get detailed information about the current selection in Figma, including all node details', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_node_info', 'description': 'Get detailed information about a specific node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to get information about'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_nodes_info', 'description': 'Get detailed information about multiple nodes in Figma', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to get information about'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_rectangle', 'description': 'Create a new rectangle in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the rectangle'}, 'height': {'type': 'number', 'description': 'Height of the rectangle'}, 'name': {'type': 'string', 'description': 'Optional name for the rectangle'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the rectangle to'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_frame', 'description': 'Create a new frame in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the frame'}, 'height': {'type': 'number', 'description': 'Height of the frame'}, 'name': {'type': 'string', 'description': 'Optional name for the frame'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the frame to'}, 'fillColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Fill color in RGBA format'}, 'strokeColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Stroke color in RGBA format'}, 'strokeWeight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Auto-layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}, 'paddingTop': {'type': 'number', 'description': 'Top padding for auto-layout frame'}, 'paddingRight': {'type': 'number', 'description': 'Right padding for auto-layout frame'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding for auto-layout frame'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding for auto-layout frame'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment for auto-layout frame. Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment for auto-layout frame'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode for auto-layout frame'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode for auto-layout frame'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children in auto-layout frame. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_text', 'description': 'Create a new text element in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'text': {'type': 'string', 'description': 'Text content'}, 'fontSize': {'type': 'number', 'description': 'Font size (default: 14)'}, 'fontWeight': {'type': 'number', 'description': 'Font weight (e.g., 400 for Regular, 700 for Bold)'}, 'fontColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Font color in RGBA format'}, 'name': {'type': 'string', 'description': 'Semantic layer name for the text node'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the text to'}}, 'required': ['x', 'y', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_fill_color', 'description': 'Set the fill color of a node in Figma can be TextNode or FrameNode', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_stroke_color', 'description': 'Set the stroke color of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}, 'weight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_move_node', 'description': 'Move a node to a new position in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to move'}, 'x': {'type': 'number', 'description': 'New X position'}, 'y': {'type': 'number', 'description': 'New Y position'}}, 'required': ['nodeId', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_clone_node', 'description': 'Clone an existing node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to clone'}, 'x': {'type': 'number', 'description': 'New X position for the clone'}, 'y': {'type': 'number', 'description': 'New Y position for the clone'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_resize_node', 'description': 'Resize a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to resize'}, 'width': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New width'}, 'height': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New height'}}, 'required': ['nodeId', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_node', 'description': 'Delete a node from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to delete'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_multiple_nodes', 'description': 'Delete multiple nodes from Figma at once', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to delete'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_export_node_as_image', 'description': 'Export a node as an image from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to export'}, 'format': {'type': 'string', 'enum': ['PNG', 'JPG', 'SVG', 'PDF'], 'description': 'Export format'}, 'scale': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Export scale'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_text_content', 'description': 'Set the text content of an existing text node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node to modify'}, 'text': {'type': 'string', 'description': 'New text content'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_styles', 'description': 'Get all styles from the current Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_local_components', 'description': 'Get all local components from the Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_annotations', 'description': 'Get all annotations in the current document or specific node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'Optional node ID to get annotations for specific node'}, 'includeCategories': {'type': 'boolean', 'default': True, 'description': 'Whether to include category information'}}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_annotation', 'description': 'Create or update an annotation', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_annotations', 'description': 'Set multiple annotations parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the elements to annotate'}, 'annotations': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False}, 'description': 'Array of annotations to apply'}}, 'required': ['nodeId', 'annotations'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_component_instance', 'description': 'Create an instance of a component in Figma', 'parameters': {'type': 'object', 'properties': {'componentKey': {'type': 'string', 'description': 'Key of the component to instantiate'}, 'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}}, 'required': ['componentKey', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_corner_radius', 'description': 'Set the corner radius of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'radius': {'type': 'number', 'minimum': 0, 'description': 'Corner radius value'}, 'corners': {'type': 'array', 'items': {'type': 'boolean'}, 'minItems': 4, 'maxItems': 4, 'description': 'Optional array of 4 booleans to specify which corners to round [topLeft, topRight, bottomRight, bottomLeft]'}}, 'required': ['nodeId', 'radius'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_text_nodes', 'description': 'Scan all text nodes in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_nodes_by_types', 'description': 'Scan for nodes with specific types in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}, 'types': {'type': 'array', 'items': {'type': 'string'}, 'description': \"Array of node types to find (e.g. ['COMPONENT', 'FRAME'])\"}}, 'required': ['nodeId', 'types'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_text_contents', 'description': 'Set multiple text contents parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the text nodes to replace'}, 'text': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node'}, 'text': {'type': 'string', 'description': 'The replacement text'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False}, 'description': 'Array of text node IDs and their replacement texts'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_mode', 'description': 'Set the layout mode and wrap behavior of a frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}}, 'required': ['nodeId', 'layoutMode'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_padding', 'description': 'Set padding values for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'paddingTop': {'type': 'number', 'description': 'Top padding value'}, 'paddingRight': {'type': 'number', 'description': 'Right padding value'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding value'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding value'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_axis_align', 'description': 'Set primary and counter axis alignment for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment (MIN/MAX = left/right in horizontal, top/bottom in vertical). Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment (MIN/MAX = top/bottom in horizontal, left/right in vertical)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_sizing', 'description': 'Set horizontal and vertical sizing modes for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_item_spacing', 'description': 'Set distance between children in an auto-layout frame', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['nodeId', 'itemSpacing'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_check_connection_status', 'description': 'Check the connection status with Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': '__human_input__', 'description': '\\nRequest input from a human user. Pauses the workflow until input is received.\\n\\nArgs:\\n    request: The human input request\\n\\nReturns:\\n    The input provided by the human\\n\\nRaises:\\n    TimeoutError: If the timeout is exceeded\\n', 'parameters': {'type': 'object', 'properties': {'request': {'description': 'Represents a request for human input.', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'description': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Description'}, 'request_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Request Id'}, 'workflow_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Id'}, 'timeout_seconds': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Timeout Seconds'}, 'metadata': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Metadata'}}, 'required': ['prompt'], 'title': 'HumanInputRequest', 'type': 'object'}}, 'required': ['request']}}}], 'max_tokens': 4096}"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:23.935806","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Chat in progress","data":{"data":{"progress_action":"Chatting","model":"gpt-4o","agent_name":"agent","chat_turn":2}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:27.705157","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"OpenAI ChatCompletion response:","data":{"data":{"id":"chatcmpl-BOpdYvq3IgjD8ppKZ7R7eTmzro4DV","choices":[{"finish_reason":"stop","index":0,"logprobs":null,"message":{"content":"I was able to retrieve the document information, but there was an error in retrieving the image of the current page. Here's the document information:\n\n- **Page Name:** Page 1\n- **Page ID:** 0:1\n- **Page Type:** PAGE\n- **Children in Page 1:**\n  - **Frame 1 (ID: 1:2, Type: FRAME)**\n  - **Vector (ID: 44:60, Type: FRAME)**\n  - **Rectangle (ID: 88:62, Type: RECTANGLE)**\n\nWould you like to explore more about any specific nodes or need further assistance?","refusal":null,"role":"assistant","annotations":[],"audio":null,"function_call":null,"tool_calls":null}}],"created":1745258064,"model":"gpt-4o-2024-08-06","object":"chat.completion","service_tier":"default","system_fingerprint":"fp_f7a584cf1f","usage":{"completion_tokens":134,"prompt_tokens":19860,"total_tokens":19994,"completion_tokens_details":{"accepted_prediction_tokens":0,"audio_tokens":0,"reasoning_tokens":0,"rejected_prediction_tokens":0},"prompt_tokens_details":{"audio_tokens":0,"cached_tokens":0}}}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:27.705295","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Iteration 1: Stopping because finish_reason is 'stop'"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:27.705353","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Chat finished","data":{"data":{"progress_action":"Finished","model":"gpt-4o","agent_name":"agent"}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:39.800220","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"{'model': 'gpt-4o', 'messages': [{'role': 'system', 'content': 'you are an assistant'}, {'role': 'user', 'content': 'get document info and describe the image'}, {'role': 'assistant', 'audio': None, 'refusal': None, 'name': 'agent', 'tool_calls': [ChatCompletionMessageToolCall(id='call_9VVMSPnvIUcj6uIBKqzsqGvl', function=Function(arguments='{}', name='figma_get_document_info'), type='function'), ChatCompletionMessageToolCall(id='call_gsBfOjQObT8QflIbRFGWWi5n', function=Function(arguments='{}', name='figma_get_image_of_current_page'), type='function')]}, {'role': 'tool', 'tool_call_id': 'call_9VVMSPnvIUcj6uIBKqzsqGvl', 'content': '{\\'type\\': \\'text\\', \\'text\\': \\'{\"name\":\"Page 1\",\"id\":\"0:1\",\"type\":\"PAGE\",\"children\":[{\"id\":\"1:2\",\"name\":\"Frame 1\",\"type\":\"FRAME\"},{\"id\":\"44:60\",\"name\":\"Vector\",\"type\":\"FRAME\"},{\"id\":\"88:62\",\"name\":\"Rectangle\",\"type\":\"RECTANGLE\"}],\"currentPage\":{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3},\"pages\":[{\"id\":\"0:1\",\"name\":\"Page 1\",\"childCount\":3}]}\\'}\\n{\\'type\\': \\'input_image\\', \\'image_url\\': \\'\\'}'}, {'role': 'tool', 'tool_call_id': 'call_gsBfOjQObT8QflIbRFGWWi5n', 'content': '{\\'type\\': \\'text\\', \\'text\\': \"Failed to call tool \\'get_image_of_current_page\\' on server \\'figma\\': MCP error -32602: Tool get_image_of_current_page not found\"}'}, {'role': 'assistant', 'audio': None, 'refusal': None, 'name': 'agent', 'content': \"I was able to retrieve the document information, but there was an error in retrieving the image of the current page. Here's the document information:\\n\\n- **Page Name:** Page 1\\n- **Page ID:** 0:1\\n- **Page Type:** PAGE\\n- **Children in Page 1:**\\n  - **Frame 1 (ID: 1:2, Type: FRAME)**\\n  - **Vector (ID: 44:60, Type: FRAME)**\\n  - **Rectangle (ID: 88:62, Type: RECTANGLE)**\\n\\nWould you like to explore more about any specific nodes or need further assistance?\"}, {'role': 'user', 'content': 'exit'}], 'stop': None, 'tools': [{'type': 'function', 'function': {'name': 'figma_get_document_info', 'description': 'Get image of the current page in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_selection', 'description': 'Get information about the current selection in Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_read_my_design', 'description': 'Get detailed information about the current selection in Figma, including all node details', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_node_info', 'description': 'Get detailed information about a specific node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to get information about'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_nodes_info', 'description': 'Get detailed information about multiple nodes in Figma', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to get information about'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_rectangle', 'description': 'Create a new rectangle in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the rectangle'}, 'height': {'type': 'number', 'description': 'Height of the rectangle'}, 'name': {'type': 'string', 'description': 'Optional name for the rectangle'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the rectangle to'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_frame', 'description': 'Create a new frame in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'width': {'type': 'number', 'description': 'Width of the frame'}, 'height': {'type': 'number', 'description': 'Height of the frame'}, 'name': {'type': 'string', 'description': 'Optional name for the frame'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the frame to'}, 'fillColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Fill color in RGBA format'}, 'strokeColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Stroke color in RGBA format'}, 'strokeWeight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Auto-layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}, 'paddingTop': {'type': 'number', 'description': 'Top padding for auto-layout frame'}, 'paddingRight': {'type': 'number', 'description': 'Right padding for auto-layout frame'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding for auto-layout frame'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding for auto-layout frame'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment for auto-layout frame. Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment for auto-layout frame'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode for auto-layout frame'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode for auto-layout frame'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children in auto-layout frame. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['x', 'y', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_text', 'description': 'Create a new text element in Figma', 'parameters': {'type': 'object', 'properties': {'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}, 'text': {'type': 'string', 'description': 'Text content'}, 'fontSize': {'type': 'number', 'description': 'Font size (default: 14)'}, 'fontWeight': {'type': 'number', 'description': 'Font weight (e.g., 400 for Regular, 700 for Bold)'}, 'fontColor': {'type': 'object', 'properties': {'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['r', 'g', 'b'], 'additionalProperties': False, 'description': 'Font color in RGBA format'}, 'name': {'type': 'string', 'description': 'Semantic layer name for the text node'}, 'parentId': {'type': 'string', 'description': 'Optional parent node ID to append the text to'}}, 'required': ['x', 'y', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_fill_color', 'description': 'Set the fill color of a node in Figma can be TextNode or FrameNode', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_stroke_color', 'description': 'Set the stroke color of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'r': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Red component (0-1)'}, 'g': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Green component (0-1)'}, 'b': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Blue component (0-1)'}, 'a': {'type': 'number', 'minimum': 0, 'maximum': 1, 'description': 'Alpha component (0-1)'}, 'weight': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Stroke weight'}}, 'required': ['nodeId', 'r', 'g', 'b'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_move_node', 'description': 'Move a node to a new position in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to move'}, 'x': {'type': 'number', 'description': 'New X position'}, 'y': {'type': 'number', 'description': 'New Y position'}}, 'required': ['nodeId', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_clone_node', 'description': 'Clone an existing node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to clone'}, 'x': {'type': 'number', 'description': 'New X position for the clone'}, 'y': {'type': 'number', 'description': 'New Y position for the clone'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_resize_node', 'description': 'Resize a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to resize'}, 'width': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New width'}, 'height': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'New height'}}, 'required': ['nodeId', 'width', 'height'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_node', 'description': 'Delete a node from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to delete'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_delete_multiple_nodes', 'description': 'Delete multiple nodes from Figma at once', 'parameters': {'type': 'object', 'properties': {'nodeIds': {'type': 'array', 'items': {'type': 'string'}, 'description': 'Array of node IDs to delete'}}, 'required': ['nodeIds'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_export_node_as_image', 'description': 'Export a node as an image from Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to export'}, 'format': {'type': 'string', 'enum': ['PNG', 'JPG', 'SVG', 'PDF'], 'description': 'Export format'}, 'scale': {'type': 'number', 'exclusiveMinimum': 0, 'description': 'Export scale'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_text_content', 'description': 'Set the text content of an existing text node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node to modify'}, 'text': {'type': 'string', 'description': 'New text content'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_styles', 'description': 'Get all styles from the current Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_local_components', 'description': 'Get all local components from the Figma document', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_get_annotations', 'description': 'Get all annotations in the current document or specific node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'Optional node ID to get annotations for specific node'}, 'includeCategories': {'type': 'boolean', 'default': True, 'description': 'Whether to include category information'}}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_annotation', 'description': 'Create or update an annotation', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_annotations', 'description': 'Set multiple annotations parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the elements to annotate'}, 'annotations': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to annotate'}, 'labelMarkdown': {'type': 'string', 'description': 'The annotation text in markdown format'}, 'categoryId': {'type': 'string', 'description': 'The ID of the annotation category'}, 'annotationId': {'type': 'string', 'description': 'The ID of the annotation to update (if updating existing annotation)'}, 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string'}}, 'required': ['type'], 'additionalProperties': False}, 'description': 'Additional properties for the annotation'}}, 'required': ['nodeId', 'labelMarkdown'], 'additionalProperties': False}, 'description': 'Array of annotations to apply'}}, 'required': ['nodeId', 'annotations'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_create_component_instance', 'description': 'Create an instance of a component in Figma', 'parameters': {'type': 'object', 'properties': {'componentKey': {'type': 'string', 'description': 'Key of the component to instantiate'}, 'x': {'type': 'number', 'description': 'X position'}, 'y': {'type': 'number', 'description': 'Y position'}}, 'required': ['componentKey', 'x', 'y'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_corner_radius', 'description': 'Set the corner radius of a node in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node to modify'}, 'radius': {'type': 'number', 'minimum': 0, 'description': 'Corner radius value'}, 'corners': {'type': 'array', 'items': {'type': 'boolean'}, 'minItems': 4, 'maxItems': 4, 'description': 'Optional array of 4 booleans to specify which corners to round [topLeft, topRight, bottomRight, bottomLeft]'}}, 'required': ['nodeId', 'radius'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_text_nodes', 'description': 'Scan all text nodes in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_scan_nodes_by_types', 'description': 'Scan for nodes with specific types in the selected Figma node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'ID of the node to scan'}, 'types': {'type': 'array', 'items': {'type': 'string'}, 'description': \"Array of node types to find (e.g. ['COMPONENT', 'FRAME'])\"}}, 'required': ['nodeId', 'types'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_multiple_text_contents', 'description': 'Set multiple text contents parallelly in a node', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the node containing the text nodes to replace'}, 'text': {'type': 'array', 'items': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the text node'}, 'text': {'type': 'string', 'description': 'The replacement text'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False}, 'description': 'Array of text node IDs and their replacement texts'}}, 'required': ['nodeId', 'text'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_mode', 'description': 'Set the layout mode and wrap behavior of a frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutMode': {'type': 'string', 'enum': ['NONE', 'HORIZONTAL', 'VERTICAL'], 'description': 'Layout mode for the frame'}, 'layoutWrap': {'type': 'string', 'enum': ['NO_WRAP', 'WRAP'], 'description': 'Whether the auto-layout frame wraps its children'}}, 'required': ['nodeId', 'layoutMode'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_padding', 'description': 'Set padding values for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'paddingTop': {'type': 'number', 'description': 'Top padding value'}, 'paddingRight': {'type': 'number', 'description': 'Right padding value'}, 'paddingBottom': {'type': 'number', 'description': 'Bottom padding value'}, 'paddingLeft': {'type': 'number', 'description': 'Left padding value'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_axis_align', 'description': 'Set primary and counter axis alignment for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'primaryAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'SPACE_BETWEEN'], 'description': 'Primary axis alignment (MIN/MAX = left/right in horizontal, top/bottom in vertical). Note: When set to SPACE_BETWEEN, itemSpacing will be ignored as children will be evenly spaced.'}, 'counterAxisAlignItems': {'type': 'string', 'enum': ['MIN', 'MAX', 'CENTER', 'BASELINE'], 'description': 'Counter axis alignment (MIN/MAX = top/bottom in horizontal, left/right in vertical)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_layout_sizing', 'description': 'Set horizontal and vertical sizing modes for an auto-layout frame in Figma', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'layoutSizingHorizontal': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Horizontal sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}, 'layoutSizingVertical': {'type': 'string', 'enum': ['FIXED', 'HUG', 'FILL'], 'description': 'Vertical sizing mode (HUG for frames/text only, FILL for auto-layout children only)'}}, 'required': ['nodeId'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_set_item_spacing', 'description': 'Set distance between children in an auto-layout frame', 'parameters': {'type': 'object', 'properties': {'nodeId': {'type': 'string', 'description': 'The ID of the frame to modify'}, 'itemSpacing': {'type': 'number', 'description': 'Distance between children. Note: This value will be ignored if primaryAxisAlignItems is set to SPACE_BETWEEN.'}}, 'required': ['nodeId', 'itemSpacing'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': 'figma_check_connection_status', 'description': 'Check the connection status with Figma', 'parameters': {'type': 'object', 'properties': {}, 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}, {'type': 'function', 'function': {'name': '__human_input__', 'description': '\\nRequest input from a human user. Pauses the workflow until input is received.\\n\\nArgs:\\n    request: The human input request\\n\\nReturns:\\n    The input provided by the human\\n\\nRaises:\\n    TimeoutError: If the timeout is exceeded\\n', 'parameters': {'type': 'object', 'properties': {'request': {'description': 'Represents a request for human input.', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'description': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Description'}, 'request_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Request Id'}, 'workflow_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Id'}, 'timeout_seconds': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Timeout Seconds'}, 'metadata': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Metadata'}}, 'required': ['prompt'], 'title': 'HumanInputRequest', 'type': 'object'}}, 'required': ['request']}}}], 'max_tokens': 4096}"}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:39.800244","namespace":"mcp_agent.workflows.llm.augmented_llm_openai.agent","message":"Chat in progress","data":{"data":{"progress_action":"Chatting","model":"gpt-4o","agent_name":"agent","chat_turn":3}}}
{"level":"DEBUG","timestamp":"2025-04-22T02:54:39.803020","namespace":"mcp_agent.mcp.stdio","message":"Terminating process (PID: 77510)"}
{"level":"WARNING","timestamp":"2025-04-22T02:54:39.803047","namespace":"mcp_agent.mcp.stdio","message":"Error terminating process (PID: 77510): "}
